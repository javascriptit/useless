{"version":3,"sources":["webpack:///webpack/bootstrap 362d5d0f412cd431822f","webpack:///./useless.devtools.js","webpack:///./base/tier0/assert.js","webpack:///./base/uncaught.js","webpack:///./~/process/browser.js","webpack:///./base/uncaughtAsync.js","webpack:///./base/reflection.js","webpack:///./base/log.js","webpack:///./base/Testosterone.js","webpack:///./base/profiling.js","webpack:///./client/Panic.js","webpack:///./client/LogOverlay.js","webpack:///./client/Panic.css?c487","webpack:///./client/Panic.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./client/LogOverlay.css?35ec","webpack:///./client/LogOverlay.css"],"names":[],"mappings":"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;;AAEA;AACA;AACA,8FAAyF;;AAEzF;AACA;;AAEA,2DAA0D;;AAE1D;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA,yFAAwF,IAAI,EAAE,EAAE;AAChG,EAAC,I;;;;;;ACzDD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;AC1FtC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAqD;;AAErD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA6C;;AAE7C;;AAEA;;AAEA,oCAAmC;AACnC,oCAAmC,iDAAiD,6BAA6B,IAAI;;AAErH,6DAA4D;;AAE5D;;AAEA;AACA;AACA;AACA,0CAAyC,yCAAyC;AAClF;AACA;AACA,yGAAwG,EAAE;;AAE1G,EAAC,I;;;;;;ACzDD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,4CAA2C;;AAE3C,gCAA+B;;AAE/B;AACA,wCAAuC;;AAEvC;AACA,wCAAuC,GAAG;;AAE1C;AACA;AACA;AACA;AACA,sEAAqE,EAAE;;AAEvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;;AAExC;AACA;AACA;;AAEA;AA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AE,GAAG;;AAEjH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE;;AAExE,sEAAqE;;AAErE;AACA;AACA,2CAA0C,uDAAuD,eAAe;;AAEhH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6GAA4G,aAAa;;AAEzH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,2EAA0E,GAAG;;AAE7E;;AAEA;;AAEA;;AAEA;AACA;AACA,oEAAmE,8BAA8B,EAAE,GAAG;;AAEtG;;AAEA,8CAA6C,EAAE;;AAE/C;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA,6FAA4F;;;AAG5F;AACA;AACA;AACA;AACA;AACA,iFAAgF,cAAc;;AAE9F;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,iCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAoD;;AAEpD;AACA;;AAEA;AACA,4CAA2C,EAAE;;AAE7C;AACA,kB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,EAAE;;AAExE;AACA;AACA,mCAAkC;AAClC;AACA;AACA,uDAAsD,gBAAgB,EAAE,EAAE;;;AAG1E;AACA;AACA,EAAC,cAAc;AACf;AACA;AACA;AACA,0FAAyF,kBAAkB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAAyF,oEAAoE,MAAM;;AAEnK,EAAC;;;AAGD;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wHAAuH;AACvH;AACA,kGAAiG;;AAEjG,wGAAuG;;AAEvG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2EAA0E,0CAA0C;;AAEpH;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,qJAAoJ;;AAEpJ;AACA;AACA,wEAAuE,mDAAmD;;AAE1H;AACA;AACA;AACA,kDAAiD,4EAA4E;AAC7H,gDAA+C;AAC/C,EAAC;;AAED;AACA;;;;;;;;;AC7dA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,GAAG;;;AAGxB;AACA;AACA;;AAEA,gDAA+C,sBAAsB,EAAE;AACvE,gDAA+C,UAAU,sBAAsB,EAAE,EAAE;;AAEnF;AACA;AACA,+DAA8D,kBAAkB;AAChF,qCAAoC,sCAAsC;;AAE1E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,qDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA;AACA,uEAAsE,mBAAmB,SAAS;;AAElG;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA,2EAA0E;;AAE1E;AACA;;AAEA,qEAAoE;AACpE,uCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,6CAA4C;;AAE5C;;AAEA;AACA;AACA,uEAAsE,wBAAwB,WAAW;AACzG;AACA,uIAAsI;;AAEtI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAwE,yBAAyB,+BAA+B,GAAG;;AAEnI;AACA;AACA;AACA,yCAAwC,EAAE;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sDAAqD,IAAI;;AAEzD;AACA;AACA;AACA,0CAAyC,GAAG;;AAE5C;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA,8CAA6C,SAAS;;AAEtD;AACA;AACA,kCAAiC;;AAEjC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAsE,GAAG,GAAG;;AAE5E;AACA;AACA,kDAAiD,KAAK;;AAEtD,yCAAwC;AACxC;AACA;AACA,yHAAwH,GAAG,GAAG;;AAE9H,wDAAuD,S;AACvD;AACA;AACA;AACA,+CAA8C,uFAAuF;AACrI;AACA;AACA,6DAA4D;AAC5D,6DAA4D,qBAAqB,EAAE,EAAE;;AAErF,0CAAyC,GAAG,EAAE;;AAE9C,4CAA2C;AAC3C;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA,6HAA4H,EAAE,GAAG,IAAI;;AAErI,+BAA8B;;AAE9B,yEAAwE,qDAAqD;AAC7H;;AAEA;;AAEA;AACA;;AAEA;AACA,4EAA2E,EAAE,EAAE,EAAE;;;AAGjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,gBAAgB,GAAG;;AAElE,kEAAiE;;AAEjE;AACA;AACA;AACA;AACA,mCAAkC,IAAI;;AAEtC,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAkH;AAClH;AACA,oEAAmE,+BAA+B,SAAS;AAC3G,oEAAmE,2BAA2B,EAAE,EAAE,EAAE,EAAE,GAAG;;AAEzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAsF,0DAA0D;AAChJ;AACA,6EAA4E,GAAG,EAAE;;AAEjF;AACA;AACA,yEAAwE,EAAE,GAAG;;AAE7E;AACA,kDAAiD;;AAEjD;AACA;AACA,2BAA0B;;AAE1B,6CAA4C;AAC5C,gEAA+D,KAAK,iBAAiB,eAAe;AACpG,0DAAyD;;AAEzD;;AAEA;;AAEA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA,yGAAwG;AACxG;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD;AACjD;AACA;AACA;;AAEA;AACA,4DAA2D,EAAE,IAAI;;AAEjE;AACA;AACA,0CAAyC;AACzC;AACA;;AAEA,gCAA+B;AAC/B,gCAA+B,mBAAmB,EAAE;;AAEpD,uBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,oBAAoB,4BAA4B,eAAe,EAAE,EAAE;AACzG;;AAEA;;AAEA,kDAAiD,YAAY;AAC7D,uDAAsD,oCAAoC,2BAA2B;;AAErH,gEAA+D;AAC/D,gEAA+D;;AAE/D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,wDAAuD;AACvD,wDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA,mEAAkE,mBAAmB;AACrF,mEAAkE,uBAAuB;AACzF;AACA,mEAAkE,EAAE,EAAE,GAAG,IAAI;;AAE7E,4BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;;AAE9B;AACA,6DAA4D,EAAE;;;AAG9D;AACA;AACA;;AAEA,8CAA6C,WAAW,UAAU;AAClE;AACA;AACA;AACA;AACA,uDAAsD;AACtD,8DAA6D,mDAAmD,oDAAoD,GAAG;AACvK;AACA;AACA,8FAA6F;AAC7F,4DAA2D,EAAE,EAAE;;AAE/D;;AAEA;;AAEA;;AAEA;;AAEA,gCAA+B;AAC/B,+BAA8B,cAAc;AAC5C,qCAAoC,SAAS,eAAe,cAAc;AAC1E,iDAAgD,uBAAuB,uBAAuB,cAAc,EAAE,GAAG;;AAEjH;AACA,mCAAkC,kDAAkD;AACpF;AACA,mCAAkC,kDAAkD;AACpF,qCAAoC;;AAEpC;AACA;AACA;AACA;AACA,kIAAiI,GAAG,EAAE,SAAS,EAAE;;AAEjJ;AACA;AACA,EAAC,cAAc;AACf;;AAEA;;AAEA;;AAEA,mDAAkD;;AAElD,8CAA6C,0CAA0C;AACvF;AACA,qFAAoF,mBAAmB,YAAY,KAAK;;AAExH;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAqC,GAAG;;AAExC;;AAEA,gDAA+C,oGAAoG,QAAQ;AAC3J;AACA,wGAAuG,6DAA6D;AACpK,kGAAiG,iBAAiB,EAAE,OAAO,EAAE,IAAI;;AAEjI,mDAAkD,WAAW;;AAE7D,oFAAmF,qBAAqB;AACxG;;AAEA,sFAAqF,oBAAoB;AACzG;;AAEA;AACA;AACA;AACA,+DAA8D,yBAAyB,EAAE;;AAEzF,6CAA4C;AAC5C;AACA,oEAAmE;;AAEnE;AACA,4H;;AAEA;AACA;;AAEA;AACA,0HAAyH;;AAEzH,wFAAuF,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG;;;AAGtG;AACA,oC;;;;;;AC5fA;AACA;;AAEA;AACA,gBAAe;AACf;AACA;AACA,oCAAmC;AACnC,WAAU;AACV;AACA;AACA,gCAA+B;;;AAG/B,4CAA2C,oBAAoB;AAC/D;;AAEA;AACA;AACA,0CAAyC,YAAY;AACrD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,QAAQ;;AAE7B;AACA;AACA;AACA,6BAA4B;;;;;;;AC9C5B;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAQ;;AAER,+BAA8B,qCAAqC,IAAI,kCAAkC;;AAEzG;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uCAAsC;;AAEtC;AACA;AACA;AACA,mDAAkD,WAAW,6DAA6D,GAAG;;AAE7H;;AAEA;AACA;;AAEA;;AAEA,oEAAmE,cAAc;AACjF;AACA;AACA;AACA;AACA;AACA,uGAAsG;AACtG;AACA,sGAAqG;AACrG;;AAEA;;AAEA;AACA,iCAAgC;;AAEhC;AACA;AACA,oCAAmC,2BAA2B;AAC9D,+CAA8C,wBAAwB,gBAAgB,EAAE;;AAExF;AACA,0BAAyB,YAAY;;AAErC,cAAa;;AAEb,uBAAsB;;AAEtB,oBAAmB;AACnB,8DAA6D;;AAE7D,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,EAAE,IAAI,EAAE;;AAE1D;AACA;AACA,sCAAqC;;AAErC;AACA;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA,0CAAyC;;AAEzC,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;;AAEnB;AACA;AACA;AACA,mDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA,6CAA4C;;AAE5C;AACA,qEAAoE;;AAEpE;AACA;AACA;AACA;AACA,0DAAyD;;AAEzD,oCAAmC,8DAA8D;;AAEjG;AACA,+BAA8B,6CAA6C;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA,0EAAyE,WAAW;;AAEpF;AACA;AACA,cAAa;;AAEb,8EAA6E;AAC7E;AACA,4CAA2C,eAAe,gCAAgC;;AAE1F,4BAA2B;AAC3B;;AAEA,uEAAsE;AACtE;AACA,oDAAmD,8DAA8D;AACjH,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAiC,IAAI;;AAErC,wDAAuD,oBAAoB;AAC3E,sDAAqD;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA,mDAAkD,EAAE;AACpD;AACA,iCAAgC;AAChC,gEAA+D;;AAE/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6EAA4E,SAAS,IAAI,EAAE,IAAI;;AAE/F;AACA,+DAA8D;;AAE9D,iBAAgB,OAAO,EAAE;;AAEzB;AACA;AACA;AACA;;AAEA,cAAa,uBAAuB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,iCAAiC;AACpD,uBAAsB,8CAA8C,GAAG;;AAEvE,gBAAe,EAAE;;AAEjB;;AAEA,EAAC,W;;;;;;ACtPD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAoB;;AAEpB;AACA,qDAAoD;;AAEpD;AACA,8BAA6B;AAC7B;AACA,kCAAiC;AACjC,2BAA0B,EAAE,IAAI;;AAEhC;AACA,0EAAyE;AACzE;AACA,wCAAuC;;AAEvC;AACA,8DAA6D;;AAE7D;AACA,4BAA2B;;AAE3B;AACA,yCAAwC;;AAExC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA8C,cAAc;;AAE5D,6BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAiD,EAAE,EAAE;;AAErD;;AAEA,EAAC,W;;;;;;ACtED;;AAEA;AACA;AACA;AACA;AACA,iDAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;ACpBA;AACA;;;AAGA;AACA,2DAA0D,UAAU,6BAA6B,EAAE,UAAU,+BAA+B,EAAE,UAAU,6BAA6B,EAAE,EAAE,4BAA4B,UAAU,qBAAqB,EAAE,UAAU,uBAAuB,EAAE,UAAU,qBAAqB,EAAE,EAAE,sCAAsC,QAAQ,cAAc,EAAE,SAAS,eAAe,EAAE,UAAU,cAAc,EAAE,EAAE,8BAA8B,QAAQ,cAAc,EAAE,SAAS,eAAe,EAAE,UAAU,cAAc,EAAE,EAAE,gBAAgB,sDAAsD,8CAA8C,sBAAsB,EAAE,0DAA0D,YAAY,aAAa,oBAAoB,cAAc,sBAAsB,EAAE,kCAAkC,WAAW,uFAAuF,EAAE,qCAAqC,eAAe,oFAAoF,EAAE,yBAAyB,mEAAmE,2DAA2D,EAAE,4BAA4B,mEAAmE,sCAAsC,2DAA2D,8BAA8B,EAAE,0BAA0B,iCAAiC,oBAAoB,uBAAuB,eAAe,uCAAuC,6BAA6B,gCAAgC,wBAAwB,oCAAoC,0BAA0B,6BAA6B,qBAAqB,kCAAkC,2BAA2B,4BAA4B,+BAA+B,uBAAuB,wCAAwC,8BAA8B,iCAAiC,yBAAyB,4BAA4B,SAAS,UAAU,QAAQ,WAAW,EAAE,qCAAqC,YAAY,oBAAoB,SAAS,UAAU,QAAQ,WAAW,mBAAmB,eAAe,EAAE,oBAAoB,mBAAmB,oCAAoC,EAAE,gBAAgB,oCAAoC,kBAAkB,gBAAgB,qCAAqC,wBAAwB,uBAAuB,eAAe,oBAAoB,oBAAoB,YAAY,cAAc,mBAAmB,+BAA+B,wEAAwE,EAAE,wBAAwB,aAAa,qBAAqB,oBAAoB,aAAa,cAAc,uBAAuB,oBAAoB,mBAAmB,mBAAmB,mBAAmB,iBAAiB,cAAc,mBAAmB,EAAE,8BAA8B,eAAe,EAAE,wBAAwB,oCAAoC,cAAc,kBAAkB,iBAAiB,cAAc,oBAAoB,EAAE,qBAAqB,kBAAkB,aAAa,EAAE,uBAAuB,mBAAmB,oBAAoB,SAAS,UAAU,WAAW,eAAe,EAAE,gBAAgB,kBAAkB,kBAAkB,oCAAoC,2BAA2B,mBAAmB,iBAAiB,uBAAuB,oBAAoB,oBAAoB,iBAAiB,yBAAyB,cAAc,EAAE,oBAAoB,eAAe,EAAE,oBAAoB,iDAAiD,EAAE,6BAA6B,2BAA2B,uBAAuB,EAAE,2BAA2B,2BAA2B,uBAAuB,EAAE,8BAA8B,2BAA2B,uBAAuB,EAAE,4BAA4B,2BAA2B,uBAAuB,EAAE,wBAAwB,oBAAoB,qBAAqB,gBAAgB,gCAAgC,oBAAoB,iBAAiB,EAAE,wBAAwB,oBAAoB,iDAAiD,EAAE,sCAAsC,aAAa,uBAAuB,kBAAkB,oBAAoB,cAAc,eAAe,UAAU,QAAQ,gBAAgB,mBAAmB,EAAE,0CAA0C,4BAA4B,EAAE,oFAAoF,oBAAoB,UAAU,mCAAmC,uBAAuB,kBAAkB,EAAE,2CAA2C,uCAAuC,+BAA+B,iBAAiB,EAAE,0CAA0C,uCAAuC,gCAAgC,iBAAiB,EAAE,6DAA6D,6BAA6B,qBAAqB,EAAE,kEAAkE,6BAA6B,qBAAqB,EAAE,mCAAmC,kBAAkB,EAAE,gCAAgC,oBAAoB,oBAAoB,EAAE,mCAAmC,iBAAiB,uBAAuB,YAAY,EAAE,mCAAmC,+BAA+B,EAAE,yCAAyC,qBAAqB,YAAY,mCAAmC,kBAAkB,uBAAuB,kBAAkB,kBAAkB,EAAE,6CAA6C,EAAE,sFAAsF,uBAAuB,EAAE,wTAAwT,eAAe,eAAe,YAAY,EAAE,iFAAiF,sBAAsB,EAAE,4CAA4C,kBAAkB,sCAAsC,cAAc,oBAAoB,iBAAiB,iBAAiB,kBAAkB,gBAAgB,cAAc,oCAAoC,cAAc,EAAE,iDAAiD,iBAAiB,eAAe,kBAAkB,EAAE,4DAA4D,oBAAoB,EAAE,4CAA4C,mBAAmB,EAAE,wDAAwD,mBAAmB,EAAE,4EAA4E,sBAAsB,EAAE,0EAA0E,oCAAoC,yBAAyB,EAAE,0EAA0E,8BAA8B,yBAAyB,EAAE,0EAA0E,iCAAiC,wBAAwB,EAAE,4CAA4C,uCAAuC,cAAc,eAAe,uBAAuB,kBAAkB,yBAAyB,wBAAwB,EAAE,gDAAgD,YAAY,EAAE,mDAAmD,gBAAgB,EAAE,2DAA2D,eAAe,EAAE,yDAAyD,cAAc,EAAE,yDAAyD,cAAc,EAAE,yDAAyD,eAAe,EAAE,kFAAkF,mEAAmE,cAAc,EAAE,8DAA8D,cAAc,EAAE,8DAA8D,cAAc,EAAE,4BAA4B,kBAAkB,oBAAoB,cAAc,oCAAoC,cAAc,WAAW,EAAE,qDAAqD,+BAA+B,iBAAiB,6BAA6B,EAAE,yCAAyC,kBAAkB,kBAAkB,WAAW,kBAAkB,uBAAuB,uBAAuB,wBAAwB,EAAE,kEAAkE,iBAAiB,EAAE,yDAAyD,kBAAkB,+BAA+B,EAAE;;AAEl2R;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA,yCAAwC,gBAAgB;AACxD,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA,SAAQ,uBAAuB;AAC/B;AACA;AACA,IAAG;AACH;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD;;AAEA,8BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;AACA;;;;;;;ACrPA;;AAEA;AACA;AACA;AACA;AACA,iDAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;ACpBA;AACA;;;AAGA;AACA,iDAAgD,kBAAkB,cAAc,YAAY,aAAa,WAAW,eAAe,+BAA+B,mCAAmC,oRAAoR,EAAE,+BAA+B,oCAAoC,oBAAoB,qBAAqB,oCAAoC,8CAA8C,oBAAoB,WAAW,SAAS,UAAU,EAAE,mBAAmB,kBAAkB,mBAAmB,EAAE,mBAAmB,cAAc,eAAe,EAAE;;AAEzzB","file":"useless.devtools.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 362d5d0f412cd431822f\n **/","require ('./base/tier0/assert')\nrequire ('./base/uncaught')\nrequire ('./base/uncaughtAsync')\nrequire ('./base/reflection')\nrequire ('./base/log')\nrequire ('./base/Testosterone')\nrequire ('./base/profiling')\nrequire ('./client/Panic')\nrequire ('./client/LogOverlay')\n\nrequire ('./client/Panic.css')\nrequire ('./client/LogOverlay.css')\n\n/*  ======================================================================== */\n\ndocument.ready (function () {\n\t\n\tPanic.init ()\n\n\tCallStack.isThirdParty.intercept (function (file, originalImpl) {\n\t    return (file.indexOf ('underscore') >= 0) ||\n\t           (file.indexOf ('jquery') >= 0)     ||\n\t           (file.indexOf ('useless') >= 0)    ||\n\t           (file.indexOf ('mootools') >= 0) })\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./useless.devtools.js\n ** module id = 0\n ** module chunks = 0\n **/","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n------------------------------------------------------------------------\n\nUnit tests (bootstrap code)\n\n------------------------------------------------------------------------\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n_.hasAsserts = true\n\n_.extend (_, {\n\n/*  a namespace where you put tests (for enumeration purposes)\n    ======================================================================== */\n\n    tests: {},\n\n/*  A degenerate case of a test shell. We use it to bootstrap most critical\n    useless.js internals, where real shell (Testosterone.js) is not available,\n    as it itself depends on these utility. It takes test and test's subject as\n    arguments (test before code, embodying test-driven philosophy) and executes\n    test immediately, throwing exception if anything fails - which is simply\n    the default behavior of $assert. So expect no advanced error reporting\n    and no controlled execution by using this API.\n    ======================================================================== */\n\n    withTest:   function (name, test, defineSubject) {\n                    defineSubject ()\n                    _.runTest (name, test)\n                    _.publishToTestsNamespace (name, test) },\n\n/*  Publishes to _.tests namespace, but does not run\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    deferTest:  function (name, test, defineSubject) {\n                    defineSubject ()\n                    _.publishToTestsNamespace (name, test) },\n\n    /*  INTERNALS (you won't need that)\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n        runTest:    function (name, test) {\n                        try {\n                            if (_.isFunction (test)) {                               test () }\n                                                else { _.each (test, function (fn) { fn () }) } }\n                        catch (e) {\n                            if (_.isAssertionError (e)) { var printedName = ((_.isArray (name) && name) || [name]).join ('.')\n                                                          console.log (printedName + ':', e.message, '\\n' + _.times (printedName.length, _.constant ('~')).join ('') + '\\n')\n                                                         _.each (e.notMatching, function (x) { console.log ('  •', x) }) }\n                            throw e } },\n\n        publishToTestsNamespace: function (name, test) {\n                        if (_.isArray (name)) { // [suite, name] case\n                            (_.tests[name[0]] || (_.tests[name[0]] = {}))[name[1]] = test }\n                        else {\n                            _.tests[name] = test } } })\n        \n/*  TEST ITSELF\n    ======================================================================== */\n\n_.withTest ('assert.js bootstrap', function () {\n\n/*  One-argument $assert (requires its argument to be strictly 'true')\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assert (true)\n\n    $assert (                       // public front end, may be replaced by environment)\n        _.assert ===                // member of _ namespace (original implementation, do not mess with that)\n        _.assertions.assert)        // member of _.assertions (for enumeration purposes)\n\n    $assertNot (false)\n    $assertNot (5)                  // NB: assertNot means 'assert not true', hence this will pass\n\n/*  Multi-argument assert (requires its arguments be strictly equal to each other)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assert (2 + 2, 2 * 2, 4)                    // any number of arguments\n    $assert ({ foo: [1,2,3] }, { foo: [1,2,3] }) // compares objects (deep match)\n    $assert ({ foo: { bar: 1 }, baz: 2 },        // ignores order of properties\n             { baz: 2, foo: { bar: 1 } })\n\n    $assertNot (2 + 2, 5)\n\n/*  Nonstrict matching (a wrapup over _.matches)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertMatches ({ foo: 1, bar: 2 },\n                    { foo: 1 })\n\n/*  Nonstrict matching against complex objects (stdlib.js feature)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) { $assertMatches ( { foo: [1,2], bar: 3 },\n                                        { foo: [1] }) }\n\n/*  Regex matching (stdlib.js feature)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) { $assertMatches ('123', /[0-9]+/) }\n\n\n/*  Type matching (plain)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) {  $assertTypeMatches (42, 'number')\n                        $assertFails (function () {\n                            $assertTypeMatches ('foo', 'number') }) }\n\n/*  Type matching (array type)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) {  $assertTypeMatches ([1,2],   [])\n                        $assertTypeMatches ([],      [])\n                        $assertTypeMatches ([1,2,3], ['number'])\n                        $assertTypeMatches ([],      ['number'])\n                        $assertFails (function () {\n                            $assertTypeMatches ([1,2,3],     ['string'])\n                            $assertTypeMatches ([1,2,'foo'], ['number']) }) }\n\n/*  Type matching (deep)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) {  $assertTypeMatches ({\n\n                            /*  Input object */\n\n                                foo: 42,\n                                bar: {\n                                    even: 4,\n                                    many: ['foo','bar'] } }, {\n\n                            /*  Type contract */\n\n                                foo: 'number',      // simple type check\n                                qux: 'undefined',   // nonexisting match 'undefined' \n                                bar: {                                              // breakdown of complex object \n                                    even: function (n) { return (n % 2) === 0 },    // custom contract predicate    \n                                    many: ['string'] } }) }                         // array contract (here, 'array of strings')\n\n/*  Type matching ($prototype)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasOOP) { var Foo = $prototype (),\n                        Bar = $prototype ()\n\n        $assertTypeMatches ({ foo: new Foo (),\n                              bar: new Bar () },\n\n                            { foo: Foo,\n                              bar: Bar })\n\n        $assertFails (function () {\n            $assertTypeMatches (new Bar (), Foo) }) };\n\n\n/*  Argument contracts\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\nif (_.hasStdlib) {\n\n    var testF = function (_777, _foo_bar_baz, notInvolved) { $assertArguments (arguments) }\n\n                    testF (777, 'foo bar baz')\n\n    $assertFails (function () { testF (777, 42) }) }\n\n/*  Ensuring throw (and no throw)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertThrows (function () { throw 42 })\n    $assertNotThrows (function () {})\n\n/*  Ensuring throw (strict version)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertThrows (     function () { throw 42 }, 42) // accepts either plain value or predicate\n    $assertThrows (     function () { throw new Error ('42') }, _.matches ({ message: '42' }))\n\n    $assertFails (function () {\n        $assertThrows ( function () { throw 42 }, 24)\n        $assertThrows ( function () { throw new Error ('42') }, _.matches ({ message: '24' })) })\n\n/*  Ensuring execution\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertEveryCalled     (function (a, b, c) { a (); a (); b (); c () })\n    $assertEveryCalledOnce (function (a, b, c) { a ();       b (); c () })\n    $assertEveryCalled     (function (x__3) { x__3 (); x__3 (); x__3 (); })\n\n    /*$assertFails (function () {\n        $assertEveryCalled     (function (a, b, c) { a (); b () })\n        $assertEveryCalledOnce (function (a, b, c) { a (); b (); b (); c (); })\n        $assertEveryCalled     (function (x__3) { x__3 (); x__3 (); }) })*/\n\n\n/*  TODO:   1) add CPS support\n            2) replace $assertCPS with this\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if (_.hasStdlib) {\n\n            $assertCalledWithArguments (   ['foo',\n                                           ['foo', 'bar']], function (fn) {\n\n                                        fn ('foo')\n                                        fn ('foo', 'bar') }) }\n\n\n/*  Ensuring CPS routine result (DEPRECATED)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertCPS (function (then) { then ('foo', 'bar') }, ['foo', 'bar'])\n    $assertCPS (function (then) { then ('foo') }, 'foo')\n    $assertCPS (function (then) { then () })\n\n\n/*  Ensuring assertion failure\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    $assertFails (function () {\n        $fail                                           // simplest way to generate assertion\n        $stub                                           // to mark code stubs (throws error)\n        $assert ('not true')                            // remember that assert is more strict than JavaScript if clauses\n        $assert ({ foo: 1, bar: 2 }, { foo: 1 })        // not be confused with _.matches behavior (use $assertMatches for that)\n        $assert ([1,2,3,4], [1,2,3])                    // same for arrays\n        $assert (['foo'], { 0: 'foo', length: 1 })      // array-like objects not gonna pass (regression test)\n        $assertFails (function () {}) })                // $assertFails fails if passed code don't\n\n/*  Default fail behavior (never depend on that, as it's environment-dependent)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\n\n    if ($assert === _.assertions.assert) {\n        $assertThrows (function () { $fail }) }\n\n\n/*  IMPLEMENTATION\n    ======================================================================== */\n\n}, function () {\n\n    var assertImpl = function (positive) {\n                        return function (__) {  var args = [].splice.call (arguments, 0)\n\n                                                if (args.length === 1) {\n                                                    if (positive && (args[0] !== true)) {\n                                                        _.assertionFailed ({ notMatching: args }) } }\n\n                                                else if (positive && (_.allEqual (args) !== true)) {\n                                                    _.assertionFailed ({ notMatching: args }) }\n\n                                                return true } }\n\n    /*  Fix for _.matches semantics (should not be true for _.matches (42) (24))\n     */\n    $overrideUnderscore ('matches', function (matches) {\n        return function (a) {\n            return _.isObject (a) ? matches (a) : function (b) { return a === b } } })\n\n    _.extend (_, _.assertions = {\n\n        assert:    assertImpl (true),\n        assertNot: assertImpl (false),\n\n        assertCPS: function (fn, args, then) { var requiredResult = (args && (_.isArray (args) ? args : [args])) || []\n            fn (function () {\n                $assert ([].splice.call (arguments, 0), requiredResult)\n                if (then) { then (); return true; } }) },\n\n        assertNotCalled: function (context) {\n            var inContext = true; context (function () { if (inContext) { $fail } }); inContext = false },\n\n        assertEveryCalledOnce: function (fn, then) {\n            return _.assertEveryCalled (_.hasTags ? $once (fn) : (fn.once = true, fn), then) },\n\n        assertEveryCalled: function (fn_, then) { var fn    = _.hasTags ? $untag (fn_)    : fn_,\n                                                      async = _.hasTags ? $async.is (fn_) : fn_.async\n                                                      once  = _.hasTags ? $once.is (fn_)  : fn_.once\n\n            var match     = once ? null : fn.toString ().match (/.*function[^\\(]\\(([^\\)]+)\\)/)\n            var contracts = once ? _.times (fn.length, _.constant (1)) :\n                                   _.map (match[1].split (','), function (arg) {\n                                                                    var parts = (arg.trim ().match (/^(.+)__(\\d+)$/))\n                                                                    var num = (parts && parseInt (parts[2], 10))\n                                                                    return _.isFinite (num) ? (num || false) : true })\n            var status    = _.times (fn.length, _.constant (false))\n            var callbacks = _.times (fn.length, function (i) {\n                                                    return function () {\n                                                        status[i] =\n                                                            _.isNumber (contracts[i]) ?\n                                                                ((status[i] || 0) + 1) : true\n                                                        if (async && _.isEqual (status, contracts))\n                                                            then () } })\n            fn.apply (null, callbacks)\n\n            if (!async)   { _.assert (status, contracts)\n                if (then) { then () } } },\n\n        assertCalledWithArguments: function (argsPattern, generateCalls) {\n                                        return _.assert (_.arr (generateCalls), argsPattern) },\n\n        assertCallOrder: function (fn) {\n            var callIndex = 0\n            var callbacks = _.times (fn.length, function (i) { return function () { arguments.callee.callIndex = callIndex++ } })\n            fn.apply (null, callbacks)\n            return _.assert (_.pluck (callbacks, 'callIndex'), _.times (callbacks.length, _.identity.arity1)) },\n\n        assertMatches: function (value, pattern) {\n            try {       return _.assert (_.matches.apply (null, _.rest (arguments)) (value)) }\n            catch (e) { throw _.isAssertionError (e) ? _.extend (e, { notMatching: [value, pattern] }) : e } },\n\n        assertNotMatches: function (value, pattern) {\n            try {       return _.assert (!_.matches.apply (null, _.rest (arguments)) (value)) }\n            catch (e) { throw _.isAssertionError (e) ? _.extend (e, { notMatching: [value, pattern] }) : e } },\n\n        assertType: function (value, contract) {\n            return _.assert (_.decideType (value), contract) },\n\n        assertTypeMatches: function (value, contract) { \n                                return _.isEmpty (mismatches = _.typeMismatches (contract, value))\n                                    ? true\n                                    : _.assertionFailed ({\n                                        message: 'provided value type not matches required contract',\n                                        asColumns: true,\n                                        notMatching: [\n                                            { provided: value },\n                                            { required: contract },\n                                            { mismatches: mismatches }] }) },\n\n        assertFails: function (what) {\n            return _.assertThrows.call (this, what, _.isAssertionError) },\n\n        assertThrows: function (what, errorPattern) {\n                            var e = undefined, thrown = false\n                                try         { what.call (this) }\n                                catch (__)  { e = __; thrown = true }\n\n                            _.assert.call (this, thrown)\n\n                            if (arguments.length > 1) {\n                                _.assertMatches.call (this, e, errorPattern) } },\n\n        assertNotThrows: function (what) {\n            return _.assertEveryCalled (function (ok) { what (); ok () }) },\n\n        assertArguments: function (args, callee, name) {\n            var fn    = (callee || args.callee).toString ()\n            var match = fn.match (/.*function[^\\(]\\(([^\\)]+)\\)/)\n            if (match) {\n                var valuesPassed   = _.asArray (args);\n                var valuesNeeded   = _.map (match[1].split (','),\n                                            function (_s) {\n                                                var s = (_s.trim ()[0] === '_') ? _s.replace (/_/g, ' ').trim () : undefined\n                                                var n = parseInt (s, 10)\n                                                return _.isFinite (n) ? n : s })\n\n                var zap = _.zipWith ([valuesNeeded, valuesPassed], function (a, b) {\n                                return (a === undefined) ? true : (a === b) })\n\n                if (!_.every (zap)) {\n                    _.assertionFailed ({ notMatching: _.nonempty ([[name, fn].join (': '), valuesNeeded, valuesPassed]) }) } } },\n\n        fail: function () {\n                _.assertionFailed () },\n\n        fails: _.constant (function () {    // higher order version\n                _.assertionFailed () }),\n\n        stub: function () {\n                _.assertionFailed () } })\n\n\n    /*  DEFAULT FAILURE IMPL.\n        ---------------------\n        We do not subclass Error, because _.isTypeOf currently does not support\n        inhertitance (UPDATE: now does) and it would cause troubles in test shell\n        and logging facility. Thus a subclass is defined that way.\n        ======================================================================== */\n\n    _.extend (_, {\n\n        assertionError: function (additionalInfo) {\n                            return _.extend (new Error (\n                                (additionalInfo && additionalInfo.message) || 'assertion failed'), additionalInfo, { assertion: true }) },\n\n        assertionFailed: function (additionalInfo) {\n                            throw _.extend (_.assertionError (additionalInfo), {\n                                        stack: _.rest ((new Error ()).stack.split ('\\n'), 3).join ('\\n') }) },\n\n        isAssertionError: function (e) {        \n                            return e && (e.assertion === true) } })\n\n\n    /*  $assert helper\n        ======================================================================== */\n\n    _.extend (_, {\n\n        allEqual: function (values) {\n                            return _.reduce (values, function (prevEqual, x) {\n                                return prevEqual && _.isEqual (values[0], x) }, true) } })\n\n    /*  Publish asserts as $-things (will be replaced by Testosterone.js onwards,\n        thus configurable=true)\n        ======================================================================== */\n\n    _.each (_.keys (_.assertions), function (name) {\n        $global.define ('$' + name, _[name], { configurable: true }) })\n\n    for (var k in _.assertions) {\n        $global['$' + k] = 1\n    }\n\n    $assert\n\n})\n\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/tier0/assert.js\n ** module id = 1\n ** module chunks = 0\n **/","/*  Uncaught exception handling facility\n    ======================================================================== */\n\n(function () {\n\n    _.hasUncaught = true\n\n    var reThrownTag = ' [re-thrown by a hook]' // marks error as already processed by globalUncaughtExceptionHandler\n\n    var globalUncaughtExceptionHandler = _.globalUncaughtExceptionHandler = function (e) {\n\n        var chain = arguments.callee.chain\n                    arguments.callee.chain = _.reject (chain, _.property ('catchesOnce'))\n\n        if (chain.length) {\n            for (var i = 0, n = chain.length; i < n; i++) {\n                try {\n                    chain[i] (e)\n                    break }\n                catch (newE) {\n                    console.log (newE)\n                    if (i === n - 1) {\n                        newE.message += reThrownTag\n                        throw newE }\n                    else {\n                        if (newE && (typeof newE === 'object')) { newE.originalError = e }\n                        e = newE } } } }\n        else {\n            e.message += reThrownTag\n            throw e } }\n\n    _.withUncaughtExceptionHandler = function (handler, context_) { var context = context_ || _.identity\n\n        if (context_) {\n            handler.catchesOnce = true }\n\n                               globalUncaughtExceptionHandler.chain.unshift (handler)\n        context (function () { globalUncaughtExceptionHandler.chain.remove  (handler) }) }\n\n    globalUncaughtExceptionHandler.chain = []\n\n    switch ($platform.engine) {\n        case 'node':\n            require ('process').on ('uncaughtException', globalUncaughtExceptionHandler); break;\n\n        case 'browser':\n            window.addEventListener ('error', function (e) {\n\n                if (e.message.indexOf (reThrownTag) < 0) { // if not already processed by async hooks\n\n                    if (e.error) {\n                        globalUncaughtExceptionHandler (e.error) }\n\n                    else { // emulate missing .error (that's Safari)\n                        globalUncaughtExceptionHandler (_.extend (new Error (e.message), {\n                            stub: true,\n                            stack: 'at ' + e.filename + ':' + e.lineno + ':' + e.colno })) } } }) }\n}) ()\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/uncaught.js\n ** module id = 2\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 3\n ** module chunks = 0\n **/","/*  Provides call stack persistence across async call boundaries.\n    ======================================================================== */\n\n(function () {\n\n    if ($platform.Browser) {\n\n        _.hasUncaughtAsync = true\n\n        var globalAsyncContext = undefined\n\n        var listenEventListeners = function (genAddEventListener, genRemoveEventListener) {\n\n            var override = function (obj) {\n\n                obj.addEventListener    = genAddEventListener    (obj.addEventListener)\n                obj.removeEventListener = genRemoveEventListener (obj.removeEventListener) }\n\n            if (window.EventTarget) {\n                override (window.EventTarget.prototype) }\n\n            else {\n                override (Node.prototype)\n                override (XMLHttpRequest.prototype) } }\n\n        var asyncHook = function (originalImpl, callbackArgumentIndex) {\n            return __supressErrorReporting = function () {\n\n                    var asyncContext = {\n                        name: name,\n                        stack: (new Error ()).stack,\n                        asyncContext: globalAsyncContext }\n\n                    var args = _.asArray (arguments)\n                    var fn   = args[callbackArgumentIndex]\n\n                    if (!_.isFunction (fn)) { throw new Error ('[uncaughtAsync.js] callback should be a function')}\n\n                    fn.__uncaughtJS_wrapper = args[callbackArgumentIndex] = __supressErrorReporting = function () {\n\n                        globalAsyncContext = asyncContext\n\n                        try       { return fn.apply (this, arguments) }\n                        catch (e) { _.globalUncaughtExceptionHandler (_.extend (e, { asyncContext: asyncContext })) } }\n\n                    return originalImpl.apply (this, args) } }\n\n        window.setTimeout = asyncHook (window.setTimeout, 0)\n\n        /*  Manually catch uncaught exceptions at async call boundaries (providing missing .error for Safari)\n         */ \n        listenEventListeners (\n            function (addEventListener) { return asyncHook (addEventListener, 1) },\n            function (removeEventListener) {\n                return function (name, fn, bubble, untrusted) {\n                   return removeEventListener.call (this, name, fn.__uncaughtJS_wrapper || fn, bubble) } }) }\n\n}) ()\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/uncaughtAsync.js\n ** module id = 4\n ** module chunks = 0\n **/","/*  Self-awareness module\n    ======================================================================== */\n\n_.hasReflection = true\n\n_.tests.reflection = {\n\n    'file paths': function () {\n        $assert ($sourcePath .length > 0)\n        $assert ($uselessPath.length > 0) },\n\n    'readSource': function () { var uselessJS = $uselessPath + $uselessFile\n\n        SourceFiles.read (uselessJS, function (text) {\n            $assert (text.length > 0) })\n\n        SourceFiles.line (uselessJS, 0, function (line) {\n            $assert (line.length > 0) }) },\n\n    'CallStack from error': function () {\n        try {\n            throw new Error ('oh fock') }\n        catch (e) {\n            $assertTypeMatches (CallStack.fromError (e), CallStack) } },\n\n    '$callStack': function (testDone) {\n\n        /*  That's how you access call stack at current location\n         */\n        var stack = $callStack\n\n        /*  It is an array of entries...\n         */\n        $assert (_.isArray (stack))\n\n        /*  ...each having following members\n         */\n        $assertTypeMatches (stack[0], {\n            callee:         'string',       // function name\n            calleeShort:    'string',       // short function name (only the last part of dot-sequence)\n            file:           'string',       // full path to source file at which call occurred\n            fileName:       'string',       // name only (with extension)\n            fileShort:      'string',       // path relative to $sourcePath\n            thirdParty:     'boolean',      // denotes whether the call location occured at 3rd party library\n            index:          'boolean',      // denotes whether the call location occured at index page\n           'native':        'boolean',      // denotes whether the call location occured in native impl.\n            line:           'number',       // line number\n            column:         'number',       // character number\n            source:         'string',       // source code (may be not ready right away)\n            sourceReady:    'function' })   // a barrier, opened when source is loaded (see dynamic/stream.js on how-to use)\n\n        /*  $callStack is CallStack instance, providing some helpful utility:\n         */\n        $assert (_.isTypeOf (CallStack, stack))\n\n        /*  1. clean CallStack (with 3rdparty calls stripped)\n         */\n        $assert (_.isTypeOf (CallStack, stack.clean))\n\n        /*  2. shifted by some N (useful for error reporting, to strip error reporter calls)\n         */\n        $assert (_.isTypeOf (CallStack, stack.offset (2)))\n\n        /*  3. filter and reject semantics supported, returning CallStack instances\n         */\n        $assert (_.isTypeOf (CallStack, stack.filter (_.identity)))\n        $assert (_.isTypeOf (CallStack, stack.reject (_.identity)))\n\n        $assertEveryCalled ($async (function (sourceReady, sourcesReady, safeLocationReady) {\n\n            /*  4. source code access, either per entry..\n             */\n            stack[0].sourceReady (function (src) {               // sourceReady is barrier, i.e. if ready, called immediately\n                $assert (typeof src, 'string'); sourceReady () })\n\n            /*  5. ..or for all stack\n             */\n            stack.sourcesReady (function () {                     // sourcesReady is barrier, i.e. if ready, called immediately\n                _.each (stack, function (entry) {\n                    $assert (typeof entry.source, 'string') }); sourcesReady () })\n\n            /*  Safe location querying\n             */\n            stack.safeLocation (7777).sourceReady (function (line) {\n                $assert ('??? WRONG LOCATION ???', line); safeLocationReady () }) }), testDone) },\n\n    'Prototype.$meta': function (done) {\n        var Dummy = $prototype ()\n\n        Dummy.$meta (function (meta) {\n            $assertMatches (meta, { name: 'Dummy', type: 'prototype' })\n            done () }) },\n\n    'Trait.$meta': function (done) {\n        var Dummy = $trait ()\n        Dummy.$meta (function (meta) {\n            $assertMatches (meta, { name: 'Dummy', type: 'trait' })\n            done () }) }\n}\n\n\n/*  Custom syntax (defined in a way that avoids cross-dependency loops)\n */\n_.defineKeyword ('callStack',   function () {\n    return CallStack.fromRawString (CallStack.currentAsRawString).offset ($platform.NodeJS ? 1 : 0) })\n\n_.defineKeyword ('currentFile', function () {\n    return (CallStack.rawStringToArray (CallStack.currentAsRawString)[$platform.NodeJS ? 3 : 1] || { file: '' }).file })\n\n_.defineKeyword ('uselessPath', _.memoize (function () {\n    return _.initial (__filename.split ('/'), $platform.NodeJS ? 2 : 1).join ('/') + '/' }) )\n\n_.defineKeyword ('sourcePath', _.memoize (function () { var local = ($uselessPath.match (/(.+)\\/node_modules\\/(.+)/) || [])[1]\n    return local ? (local + '/') : $uselessPath }))\n\n\n/*  Port __filename for browsers\n */\nif ($platform.Browser) {\n    _.defineProperty (window, '__filename', function () { return $currentFile }) }\n\n\n/*  Source code access (cross-platform)\n */\nSourceFiles = $singleton (Component, {\n\n    /*apiConfig: {\n        port:      1338,\n        hostname: 'locahost',\n        protocol: 'http:' },*/\n\n    line: function (file, line, then) {\n        SourceFiles.read (file, function (data) {\n            then ((data.split ('\\n')[line] || '').trimmed) }) },\n\n    read: $memoizeCPS (function (file, then) {\n        if (file.indexOf ('<') < 0) { // ignore things like \"<anonymous>\"\n            try {\n                if ($platform.NodeJS) {\n                    then (require ('fs').readFileSync (file, { encoding: 'utf8' }) || '') }\n                else {\n                    /*  Return response body regardless of status code\n                     */\n                    var xhr = new XMLHttpRequest ()\n                    xhr.open ('GET', file, true)\n                    xhr.onreadystatechange = function () { if (xhr.readyState == 4) { then (xhr.responseText) } }\n                    xhr.send (null) } }\n            catch (e) {\n                then ('') } }\n        else {\n            then ('') } }),\n\n    write: function (file, text, then) {\n\n        if ($platform.NodeJS) {\n\n            this.read (file, function (prevText) { // save previous version at <file>.backups/<date>\n\n                var fs   = require ('fs'),\n                    opts = { encoding: 'utf8' }\n\n          try { fs.mkdirSync     (file + '.backups') } catch (e) {}\n                fs.writeFileSync (file + '.backups/' + Date.now (), prevText, opts)\n                fs.writeFileSync (file,                             text,     opts)\n\n                then () }) }\n            \n        else {\n            JSONAPI\n                .post ('source/' + file, _.extend2 ({}, this.apiConfig, { what: { text: text } }))\n                .then (function () {\n                    log.ok (file, '— successfully saved')\n                    if (then) {\n                        then () } }) }} })\n\n\n/*  Callstack API\n */\nCallStack = $extends (Array, {\n\n    current: $static ($property (function () {\n        return CallStack.fromRawString (CallStack.currentAsRawString).offset (1) })),\n\n    fromError: $static (function (e) {\n        if (e && e.parsedStack) {\n            return CallStack.fromParsedArray (e.parsedStack).offset (e.stackOffset || 0) }\n        else if (e && e.stack) {\n            return CallStack.fromRawString (e.stack).offset (e.stackOffset || 0) }\n        else {\n            return CallStack.fromParsedArray ([]) } }),\n\n    fromErrorWithAsync: $static (function (e) {\n        var stackEntries = CallStack.fromError (e),\n            asyncContext = e.asyncContext\n\n        while (asyncContext) {\n            stackEntries = stackEntries.concat (CallStack.fromRawString (asyncContext.stack))\n            asyncContext = asyncContext.asyncContext }\n\n        return stackEntries.mergeDuplicateLines }),\n\n    locationEquals: $static (function (a, b) {\n        return (a.file === b.file) && (a.line === b.line) && (a.column === b.column) }),\n\n    safeLocation: function (n) {\n        return this[n] || {\n            callee: '', calleeShort: '', file: '',\n            fileName: '', fileShort: '', thirdParty:    false,\n            source: '??? WRONG LOCATION ???',\n            sourceReady: _.barrier ('??? WRONG LOCATION ???') } },\n\n    mergeDuplicateLines: $property (function () {\n        return CallStack.fromParsedArray (\n            _.map (_.partition2 (this, function (e) { return e.file + e.line }),\n                    function (group) {\n                        return _.reduce (_.rest (group), function (memo, entry) {\n                            memo.callee      = (memo.callee      || '<anonymous>') + ' → ' + (entry.callee      || '<anonymous>')\n                            memo.calleeShort = (memo.calleeShort || '<anonymous>') + ' → ' + (entry.calleeShort || '<anonymous>')\n                            return memo }, _.clone (group[0])) })) }),\n\n    clean: $property (function () {\n        var clean = this.mergeDuplicateLines.reject (function (e, i) { return (e.thirdParty || e.hide) && (i !== 0) })\n        return (clean.length === 0) ? this : clean }),\n\n    asArray: $property (function () {\n        return _.asArray (this) }),\n\n    offset: function (N) {\n        return (N && CallStack.fromParsedArray (_.rest (this, N))) || this },\n\n    initial: function (N) {\n        return (N && CallStack.fromParsedArray (_.initial (this, N))) || this },\n\n    concat: function (stack) {\n        return CallStack.fromParsedArray (this.asArray.concat (stack.asArray)) },\n\n    filter: function (fn) {\n        return CallStack.fromParsedArray (_.filter (this, fn)) },\n\n    reject: function (fn) {\n        return CallStack.fromParsedArray (_.reject (this, fn)) },\n\n    reversed: $property (function () {\n        return CallStack.fromParsedArray (_.reversed (this)) }),\n\n    sourcesReady: function (then) {\n        return _.allTriggered (_.pluck (this, 'sourceReady'), then) },\n\n    /*  Internal impl.\n     */\n    constructor: function (arr) { Array.prototype.constructor.call (this)\n\n        _.each (arr, function (entry) {\n            if (!entry.sourceReady) {\n                 entry.sourceReady = _.barrier ()\n                 SourceFiles.line ((entry.remote ? 'api/source/' : '') + entry.file, entry.line - 1, function (src) {\n                    entry.hide = src.contains ('// @hide')\n                    entry.sourceReady (entry.source = src.replace ('// @hide', '')) }) }\n\n            this.push (entry) }, this) },\n\n    fromParsedArray: $static (function (arr) {\n        return new CallStack (arr) }),\n\n    currentAsRawString: $static ($property (function () {\n        var cut = $platform.Browser ? 3 : 2\n        return _.rest (((new Error ()).stack || '').split ('\\n'), cut).join ('\\n') })),\n\n    shortenPath: $static (function (path) {\n                    var relative = path.replace ($uselessPath, '')\n                                       .replace ($sourcePath,  '')\n                    return (relative !== path)\n                        ? relative.replace (/^node_modules\\//, '')\n                        : path.split ('/').last }), // extract last part of /-separated sequence\n\n    isThirdParty: $static (_.bindable (function (file) { var local = file.replace ($sourcePath, '')\n                    return ($platform.NodeJS && (file[0] !== '/')) || // from Node source\n                           (local.indexOf ('/node_modules/') >= 0) ||\n                           (file.indexOf  ('/node_modules/') >= 0 && !local) ||\n                           (local.indexOf ('underscore') >= 0) ||\n                           (local.indexOf ('jquery') >= 0) })),\n\n    fromRawString: $static (_.sequence (\n        function (rawString) {\n            return CallStack.rawStringToArray (rawString) },\n\n        function (array) {\n            return _.map (array, function (entry) {\n                return _.extend (entry, {\n                            calleeShort:    _.last (entry.callee.split ('.')),\n                            fileName:       _.last (entry.file.split ('/')),\n                            fileShort:      CallStack.shortenPath (entry.file),\n                            thirdParty:     CallStack.isThirdParty (entry.file) && !entry.index }) }) },\n\n        function (parsedArrayWithSourceLines) { return CallStack.fromParsedArray (parsedArrayWithSourceLines) })),\n\n    rawStringToArray: $static (function (rawString) { var lines = (rawString || '').split ('\\n')\n\n        return _.filter2 (lines, function (line) { line = line.trimmed\n\n            var callee, fileLineColumn = [], native_ = false\n            var planA = undefined, planB = undefined\n\n            if ((planA = line.match (/at (.+) \\((.+)\\)/)) ||\n                (planA = line.match (/(.*)@(.*)/))) {\n\n                callee         =         planA[1]\n                native_        =        (planA[2] === 'native')\n                fileLineColumn = _.rest (planA[2].match (/(.*):(.+):(.+)/) || []) }\n\n            else if ((planB = line.match (/^(at\\s+)*(.+):([0-9]+):([0-9]+)/) )) {\n                fileLineColumn = _.rest (planB, 2) }\n\n            else {\n                return false } // filter this shit out\n\n            if ((callee || '').indexOf ('__supressErrorReporting') >= 0) {\n                return false }\n\n            return {\n                beforeParse: line,\n                callee:      callee || '',\n                index:       $platform.Browser && (fileLineColumn[0] === window.location.href),\n               'native':     native_,\n                file:        fileLineColumn[0] || '',\n                line:       (fileLineColumn[1] || '').integerValue,\n                column:     (fileLineColumn[2] || '').integerValue } }) }) })\n\n/*  Reflection for $prototypes\n */\n$prototype.impl.findMeta = function (stack) {\n\n    return function (then) {\n\n        _.cps.find (CallStack.fromRawString (stack).reversed,\n\n                    function (entry, found) {\n                        entry.sourceReady (function (text) { var match = (text || '').match (\n                                                                             /([A-z]+)\\s*=\\s*\\$(prototype|singleton|component|extends|trait|aspect)/)\n                            found ((match && {\n                                name: match[1],\n                                type: match[2],\n                                file: entry.fileShort }) || false) }) },\n\n                    function (found) {\n                        then (found || {}) }) } }\n\n$prototype.macro (function (def, base) {\n\n    if (!def.$meta) {\n\n        var findMeta = _.cps.memoize ($prototype.impl.findMeta (CallStack.currentAsRawString))\n\n        _.defineMemoizedProperty (findMeta, 'promise', function () {\n              return new Promise (findMeta) })\n\n        def.$meta = $static (findMeta) }\n\n    return def })\n\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/reflection.js\n ** module id = 5\n ** module chunks = 0\n **/","_.hasLog = true\n\n_.tests.log = {\n\n    basic: function () {\n\n        log         ('log (x)')         //  Basic API\n\n        log.green      ('log.green')       //  Use for plain colored output.\n        log.boldGreen  ('log.boldGreen')\n        log.darkGreen  ('log.darkGreen')\n        log.blue       ('log.blue')\n        log.boldBlue   ('log.boldBlue')\n        log.darkBlue   ('log.darkBlue')\n        log.orange     ('log.orange')\n        log.boldOrange ('log.boldOrange')\n        log.darkOrange ('log.darkOrange')\n        log.red        ('log.red')         //  ..for more colors, see the implementation below\n        log.boldRed    ('log.boldRed')\n        log.darkRed    ('log.darkRed')\n        log.pink       ('log.pink')\n        log.boldPink   ('log.boldPink')\n        log.darkPink   ('log.darkPink')\n\n        log.margin ()\n        log.margin ()  // collapses\n\n        log.bright ('log.bright')\n        log.dark   ('log.dark')\n\n        log.margin ()\n\n        log.success ('log.success')     //  Use for quality production logging (logging that lasts).\n        log.ok      ('log.ok')\n        log.g       ('log.g')\n        log.gg      ('log.gg')\n        log.info    ('log.info')        //  Printed location greatly helps to find log cause in code.\n        log.i       ('log.i')\n        log.ii      ('log.ii')\n        log.warning ('log.warning')     //  For those who cant remember which one, there's plenty of aliases\n        log.warn    ('log.warn')\n        log.w       ('log.w')\n        log.ww      ('log.ww')        \n        log.error   ('log.error')\n        log.e       ('log.e')\n        log.ee      ('log.ee')\n\n        $assert (log ('log (x) === x'), 'log (x) === x')    // Can be used for debugging of functional expressions\n                                                            // (as it returns it first argument, like in _.identity)\n\n        log.info    (log.stackOffset (2), 'log.info (log.config ({ stackOffset: 2 }), ...)')\n\n        log.write   ('Consequent', 'arguments', log.color.red, ' joins', 'with', 'whitespace')\n\n        log.write (                     'Multi',\n                    log.color.red,      'Colored',\n                    log.color.green,    'Output',\n                    log.color.blue,     'For',\n                    log.color.orange,   'The',\n                    log.color.pink,     'Fucking',\n                    log.color.none,     'Win')\n\n        log.write   (log.boldLine)  //  ASCII art <hr>\n        log.write   (log.thinLine)\n        log.write   (log.line)\n\n        log.write   (log.indent (1),\n                     ['You can set indentation',\n                      'that is nicely handled',\n                      'in case of multiline text'].join ('\\n'))\n\n        log.orange  (log.indent (2), '\\nCan print nice table layout view for arrays of objects:\\n')\n        log.orange  (log.config ({ indent: 2, table: true }), [\n            { field: 'line',    matches: false, valueType: 'string', contractType: 'number' },\n            { field: 'column',  matches: true,  valueType: 'string', contractType: 'number' }])\n\n        log.write ('\\nObject:', { foo: 1, bar: 2, qux: 3 })         //  Object printing is supported\n        log.write ('Array:', [1, 2, 3])                             //  Arrays too\n        log.write ('Function:', _.identity)                         //  Prints code of a function\n\n        log.write ('Complex object:', { foo: 1, bar: { qux: [1,2,3], garply: _.identity }}, '\\n\\n');\n\n        log.withConfig (log.indent (1), function () {\n            log.pink ('Config stack + scopes + higher order API test:')\n            _.each ([5,6,7], logs.pink (log.indent (1), 'item = ', log.color.blue)) })\n\n        $assert (log (42), 42) } }\n\n_.extend (\n\n    /*  Basic API\n     */\n    log = function () {\n        return log.write.apply (this, [log.config ({ location: true, stackOffset: 1 })].concat (_.asArray (arguments))) }, {\n\n    Config: $prototype (),\n\n    /*  Could be passed as any argument to any write function.\n     */\n    config: function (cfg) {\n        return new log.Config (cfg) } })\n\n\n_.extend (log, {\n\n    /*  Shortcut for common cases\n     */\n    indent: function (n) {\n        return log.config ({ indent: n }) },\n\n    stackOffset: function (n) {\n        return log.config ({ stackOffset: n }) },\n\n    where: function (wat) {\n        return log.config ({ location: true, where: wat || undefined }) },\n\n    color: _.extend (function (x) { return (log.color[x] || {}).color },\n\n        _.object (\n        _.map  ([['none',        '0m',           ''],\n                 ['red',         '31m',          'color:crimson'],\n                 ['boldRed',    ['31m', '1m'],   'color:crimson;font-weight:bold'],\n                 ['darkRed',    ['31m', '2m'],   'color:crimson'],\n                 ['blue',        '36m',          'color:royalblue'],\n                 ['boldBlue',   ['36m', '1m'],   'color:royalblue;font-weight:bold;'],\n                 ['darkBlue',   ['36m', '2m'],   'color:rgba(65,105,225,0.5)'],\n                 ['boldOrange', ['33m', '1m'],   'color:saddlebrown;font-weight:bold;'],\n                 ['darkOrange', ['33m', '2m'],   'color:saddlebrown'],\n                 ['orange',      '33m',          'color:saddlebrown'],\n                 ['brown',      ['33m', '2m'],   'color:saddlebrown'],\n                 ['green',       '32m',          'color:forestgreen'],\n                 ['boldGreen',  ['32m', '1m'],   'color:forestgreen;font-weight:bold'],\n                 ['darkGreen',  ['32m', '2m'],   'color:forestgreen;opacity:0.5'],\n                 ['pink',        '35m',          'color:magenta'],\n                 ['boldPink',   ['35m', '1m'],   'color:magenta;font-weight:bold;'],\n                 ['darkPink',   ['35m', '2m'],   'color:magenta'],\n                 ['black',       '0m',           'color:black'],\n                 ['bright',     ['0m', '1m'],    'color:rgba(0,0,0);font-weight:bold'],\n                 ['dark',       ['0m', '2m'],    'color:rgba(0,0,0,0.25)']],\n\n             function (def) {\n                return [def[0], log.config ({ color: { shell: _.coerceToArray (_.map2 (def[1], _.prepends ('\\u001B['))).join (), css: def[2] }})] }))),\n\n    /*  Need one? Take! I have plenty of them!\n     */\n    boldLine:   '======================================',\n    line:       '--------------------------------------',\n    thinLine:   '......................................',\n\n    /*  Set to true to precede each log message with date and time (useful for server side logs).\n     */\n    timestampEnabled: false,\n\n    /*  For hacking log output (contextFn should be conformant to CPS interface, e.g. have 'then' as last argument)\n     */\n    withWriteBackend: $scope (function (release, backend, contextFn, done) { var prev = log.writeBackend.value\n                                                                                        log.writeBackend.value = backend\n        contextFn (function /* release */ (then) { // @hide\n                     release (function () {                                             log.writeBackend.value = prev\n                        if (then) then ()\n                        if (done) done () }) }) }),  \n\n    /*  For writing with forced default backend\n     */\n    writeUsingDefaultBackend: function (/* arguments */) { var args = arguments\n        log.withWriteBackend (\n            log.impl.defaultWriteBackend,\n            function (done) {\n                log.write.apply (null, args); done () }) },\n\n    writeBackend: function () {\n        return arguments.callee.value || log.impl.defaultWriteBackend },\n\n    withConfig: function (config, what) {  log.impl.configStack.push (log.impl.configure ([{ stackOffset: -1 }, config]))\n                     var result = what (); log.impl.configStack.pop ();\n                  return result },\n\n    currentConfig: function () { return log.impl.configure (log.impl.configStack) },\n\n    /*  Use instead of 'log.newline ()' for collapsing newlines\n     */\n    margin: (function () {\n                var lastWrite = undefined\n                return function () {\n                    if (lastWrite !== log.impl.numWrites)\n                        log.newline ()\n                        lastWrite   = log.impl.numWrites } }) (),\n\n    /*  Internals\n     */\n    impl: {\n\n        configStack: [],\n        numWrites: 0,\n\n        configure: function (configs) {\n            return _.reduce2 (\n                { stackOffset: 0, indent: 0 },\n                _.nonempty (configs), function (memo, cfg) {\n                                        return _.extend (memo, _.nonempty (cfg), {\n                                            indent:      memo.indent      + (cfg.indent || 0),\n                                            stackOffset: memo.stackOffset + (cfg.stackOffset || 0) }) }) },\n\n        /*  Nuts & guts\n         */\n        write: $restArg (_.bindable (function () { var writeBackend = log.writeBackend ()\n\n            log.impl.numWrites++\n\n            var args   = _.asArray (arguments)\n            var config = log.impl.configure ([{ stackOffset: $platform.NodeJS ? 1 : 3,\n                                                indent: writeBackend.indent || 0 }].concat (log.impl.configStack))\n\n            var runs = _.reduce2 (\n\n                /*  Initial memo\n                 */\n                [],\n                \n                /*  Arguments split by configs\n                 */\n                _.partition3 (args, _.isTypeOf.$ (log.Config)),\n                \n                /*  Gather function\n                 */\n                function (runs, span) {\n                    if (span.label === true) { config = log.impl.configure ([config].concat (span.items))\n                                               return runs }\n                                        else { return runs.concat ({ config: config,\n                                                                     text: log.impl.stringifyArguments (span.items, config) }) } })\n\n            var trailNewlinesMatch = runs.last && runs.last.text.reversed.match (/(\\n*)([^]*)/)\n            var trailNewlines = (trailNewlinesMatch && trailNewlinesMatch[1]) // dumb way to select trailing newlines (i'm no good at regex)\n            if (trailNewlinesMatch) {\n                runs.last.text = trailNewlinesMatch[2].reversed }\n\n\n            /*  Split by linebreaks\n             */\n            var newline = {}\n            var lines = _.pluck.with ('items',\n                            _.reject.with (_.property ('label'),\n                                _.partition3.with (_.equals (newline),\n                                    _.scatter (runs, function (run, i, emit) {\n                                                        _.each (run.text.split ('\\n'), function (line, i, arr) {\n                                                                                            emit (_.extended (run, { text: line })); if (i !== arr.lastIndex) {\n                                                                                            emit (newline) } }) }))))\n\n            var totalText       = _.pluck (runs, 'text').join ('')\n            var where           = config.where || log.impl.walkStack ($callStack) || {}\n            var indentation     = (config.indentPattern || '\\t').repeats (config.indent)\n\n            writeBackend ({\n                lines:         lines,\n                config:        config,\n                color:         config.color,\n                when:          (new Date ()).toISOString (),\n                args:          _.reject (args, _.isTypeOf.$ (log.Config)),\n                indentation:   indentation,\n                indentedText:  lines.map (_.seq (_.pluck.tails2 ('text'),\n                                                 _.joinsWith (''),\n                                                 _.prepends (indentation))).join ('\\n'),\n                text:          totalText,\n                codeLocation:  (config.location && log.impl.location (where)) || '',\n                trailNewlines: trailNewlines || '',\n                where:         (config.location && where) || undefined })\n\n            return _.find (args, _.not (_.isTypeOf.$ (log.Config))) })),\n\n        walkStack: function (stack) {\n            return _.find (stack.clean.offset ($platform.Browser ? 1 : 2),\n                        function (entry) { return (entry.fileShort.indexOf ('base/log.js') < 0) }) || stack[0] },\n\n        defaultWriteBackend: function (params) {\n\n            var codeLocation = params.codeLocation\n\n            if ($platform.NodeJS) {\n\n                var lines = _.map (params.lines, function (line) {\n                                                    return params.indentation + _.map (line, function (run) {\n                                                        return (run.config.color\n                                                                    ? (run.config.color.shell + run.text + '\\u001b[0m')\n                                                                    : (                         run.text)) }).join ('') }).join ('\\n')\n\n                if (log.timestampEnabled) {\n                    lines = log.color ('dark').shell + _.bullet (log.impl.timestamp (params.when) + ' ', log.color ('none').shell + lines) }\n\n                console.log (lines,\n                             log.color ('dark').shell + codeLocation + '\\u001b[0m',\n                             params.trailNewlines) }\n\n            else {\n                console.log.apply (console, _.reject.with (_.equals (undefined), [].concat (\n\n                /*  Text   */\n\n                    [(log.timestampEnabled ? ('%c' + log.impl.timestamp (params.when) + '%c') : '')\n\n                        , _.map (params.lines, function (line, i) {\n                                                return params.indentation + _.reduce2 ('', line, function (s, run) {\n                                                    return s + (run.text && ((run.config.color ? '%c' : '') +\n                                                        run.text) || '') }) }).join ('\\n')\n\n                        , (codeLocation ? ('%c' + codeLocation) : '')].nonempty.join (' '),\n\n                /*  Colors */\n\n                    (log.timestampEnabled ? ['color:rgba(0,0,0,0.4)', 'color:black'] : [])\n\n                        .concat ((_.scatter (params.lines, function (line, i, emit) {\n                            _.each (line, function (run) {\n                                if (run.text && run.config.color) { emit (run.config.color.css) } }) }) || []))\n\n                        .concat (codeLocation ? 'color:rgba(0,0,0,0.25)' : []),\n\n                    params.trailNewlines))) } },\n\n        /*  Formats timestamp preceding log messages\n         */\n        timestamp: function (x) {\n        \t           return x },\n\n        /*  Formats that \"function @ source.js:321\" thing\n         */\n        location: function (where) {\n            return _.quoteWith ('()', _.nonempty ([where.calleeShort,\n                                      _.nonempty ([where.fileName,\n                                                   where.line]).join (':')]).join (' @ ')) },\n\n\n        /*  This could be re-used by outer code for turning arbitrary argument lists into string\n         */\n        stringifyArguments: function (args, cfg) {\n            return _.map (args, function (arg) {\n                var x = log.impl.stringify (arg, cfg)\n                return (cfg.maxArgLength ? x.limitedTo (cfg.maxArgLength) : x) }).join (' ') },\n\n        /*  Smart object stringifier\n         */\n        stringify: function (what, cfg) { cfg = cfg || {}\n            if (_.isTypeOf (Error, what)) {\n                var str = log.impl.stringifyError (what)\n                if (what.originalError) {\n                    return str + '\\n\\n' + log.impl.stringify (what.originalError) }\n                else {\n                    return str } }\n\n            else if (_.isTypeOf (CallStack, what)) {\n                return log.impl.stringifyCallStack (what) }\n\n            else if (typeof what === 'object') {\n                if (_.isArray (what) && what.length > 1 && _.isObject (what[0]) && cfg.table) {\n                    return log.asTable (what) }\n                else {\n                    return _.stringify (what, cfg) } }\n                    \n            else if (typeof what === 'string') {\n                return what }\n\n            else {\n                return _.stringify (what) } },\n        \n        stringifyError: function (e) {\n            try {       \n                var stack   = CallStack.fromErrorWithAsync (e).offset (e.stackOffset || 0).clean\n                var why     = (e.message || '').replace (/\\r|\\n/g, '').trimmed.limitedTo (120)\n\n                return ('[EXCEPTION] ' + why + '\\n\\n') +\n                    (e.notMatching && (_.map (_.coerceToArray (e.notMatching || []),\n                                        log.impl.stringify.then (_.prepends ('\\t'))).join ('\\n') + '\\n\\n') || '') +\n                    log.impl.stringifyCallStack (stack) + '\\n' }\n            catch (sub) {\n                return 'YO DAWG I HEARD YOU LIKE EXCEPTIONS... SO WE THREW EXCEPTION WHILE PRINTING YOUR EXCEPTION:\\n\\n' + sub.stack +\n                    '\\n\\nORIGINAL EXCEPTION:\\n\\n' + e.stack + '\\n\\n' } },\n\n        stringifyCallStack: function (stack) {\n            return log.columns (stack.map (\n                function (entry) { return [\n                    '\\t' + 'at ' + entry.calleeShort.first (30),\n                    _.nonempty ([entry.fileShort, ':', entry.line]).join (''),\n                    (entry.source || '').first (80)] })).join ('\\n') } } })\n\n\n/*  Printing API\n */\n;(function () {                                                var write = log.impl.write\n   _.extend (log,\n             log.printAPI =\n                    _.object (\n                    _.concat (            [[            'newline', write.$ (log.config ({ location: false }), '') ],\n                                           [              'write', write                                                          ]],\n                            _.flat (_.map (['red failure error e',\n                                                    'blue info i',\n                                               'darkBlue minor m',\n                                          'orange warning warn w',\n                                             'green success ok g',\n                                                   'darkGreen dg',\n                                            'pink notice alert p',\n                                                    'boldPink pp',\n                                                    'dark hint d',\n                                                   'boldGreen gg',\n                                                       'bright b',\n                                          'boldRed bloody bad ee',\n                                                    'darkPink dp',\n                                                       'brown br',\n                                                 'darkOrange wtf',\n                                                  'boldOrange ww',\n                                                     'darkRed er',\n                                                    'boldBlue ii' ],\n                                                    _.splitsWith  (' ').then (\n                                                      _.mapsWith  (\n                                                  function (name,                                   i,                         names      )  {\n                                                   return  [name,  write.$ (log.config ({ location: i !== 0, color: log.color (names.first), stackOffset: 2 })) ] })))))))\n\n}) ()\n\n\n/*  Higher order API\n */\nlogs = _.mapWith (_.callsTo.compose (_.callsWith (log.stackOffset (1))), log.printAPI)\n\n\n/*  Experimental formatting shit.\n */\n_.extend (log, {\n\n    asTable: function (arrayOfObjects) {\n        var columnsDef  = arrayOfObjects.map (_.keys.arity1).reduce (_.union.arity2, []) // makes ['col1', 'col2', 'col3'] by unifying objects keys\n        var lines       = log.columns ( [columnsDef].concat (\n                                            _.map (arrayOfObjects, function (object) {\n                                                                        return columnsDef.map (_.propertyOf (object)) })), {\n                                        maxTotalWidth: 120,\n                                        minColumnWidths: columnsDef.map (_.property ('length')) })\n\n        return [lines[0], log.thinLine[0].repeats (lines[0].length), _.rest (lines)].flat.join ('\\n') },\n\n    /*  Layout algorithm for ASCII sheets (v 2.0)\n     */\n    columns: function (rows, cfg_) {\n        if (rows.length === 0) {\n            return [] }\n        else {\n            \n            /*  convert column data to string, taking first line\n             */\n            var rowsToStr       = rows.map (_.map.tails2 (function (col) { return _.asString (col).split ('\\n')[0] }))\n\n            /*  compute column widths (per row) and max widths (per column)\n             */\n            var columnWidths    = rowsToStr.map (_.map.tails2 (_.property ('length')))\n            var maxWidths       = columnWidths.zip (_.largest)\n\n            /*  default config\n             */\n            var cfg             = cfg_ || { minColumnWidths: maxWidths, maxTotalWidth: 0 }\n\n            /*  project desired column widths, taking maxTotalWidth and minColumnWidths in account\n             */\n            var totalWidth      = _.reduce (maxWidths, _.sum, 0)\n            var relativeWidths  = _.map (maxWidths, _.muls (1.0 / totalWidth))\n            var excessWidth     = Math.max (0, totalWidth - cfg.maxTotalWidth)\n            var computedWidths  = _.map (maxWidths, function (w, i) {\n                                                        return Math.max (cfg.minColumnWidths[i], Math.floor (w - excessWidth * relativeWidths[i])) })\n\n            /*  this is how many symbols we should pad or cut (per column)\n             */\n            var restWidths      = columnWidths.map (function (widths) { return [computedWidths, widths].zip (_.subtract) })\n\n            /*  perform final composition\n             */\n            return [rowsToStr, restWidths].zip (\n                 _.zap.tails (function (str, w) { return w >= 0 ? (str + ' '.repeats (w)) : (_.initial (str, -w).join ('')) })\n                 .then (_.joinsWith ('  ')) ) } }\n})\n\nif ($platform.NodeJS) {\n    module.exports = log }\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/log.js\n ** module id = 6\n ** module chunks = 0\n **/","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n------------------------------------------------------------------------\n\nTestosterone is a cross-platform unit test shell. Features:\n\n    - asynchronous tests\n    - asynchronous assertions\n    - log handling (log.xxx calls are scheduled to current test log)\n    - exception handling (uncaught exceptions are nicely handled)\n\n------------------------------------------------------------------------\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n/*  A contract for test routines that says that test should fail and it's the behavior expected\n */\n_.defineTagKeyword ('shouldFail')\n\n\n/*  A contract for custom assertions, says that assertion is asynchronous.\n */\n_.defineTagKeyword ('async')\n\n\n/*  This is test suite for tests framework itself.\n\n    As you can see, tests are defined as _.tests.xxx. So, if you have module called 'foo',\n    place tests for that module in _.tests.foo — it will be picked up by tests framework\n    automagically ©\n */\n_.tests.Testosterone = {\n\n    /*  3.  To write asynchronous tests, define second argument in your test routine, which\n            is 'done' callback. The framework will look into argument count of your routine,\n            and if second argument is there, your routine will be considered as asynchronous,\n            i.e. not completing until 'done' is explicitly triggered.\n     */\n    'async': function (done) {\n        _.delay (function () {\n            done () }) },\n\n\n    /*  4.  Use $tests to define unit tests on prototypes (works only on stuff in global namespace)\n     */\n    '$tests': function () {\n\n        DummyPrototypeWithTest  = $prototype ({ $test: function () {} })\n        DummyPrototypeWithTests = $prototype ({ $tests: { dummy: function () {} } })\n\n        /*  $test/$tests renders to static immutable property $tests\n         */\n        $assertTypeMatches (DummyPrototypeWithTests.$tests, [{ '*': 'function' }])\n        $assertThrows (function () { DummyPrototypeWithTests.$tests = 42 })\n\n        /*  Tests are added to Testosterone.prototypeTests\n         */\n        $assertMatches (_.pluck (Testosterone.prototypeTests, 'tests'), [DummyPrototypeWithTest .$tests,\n                                                                         DummyPrototypeWithTests.$tests]) }\n }\n\n/*  For marking methods in internal impl that should publish themselves as global keywords (like $assert)\n */\n_.defineTagKeyword ('assertion')\n\nTestosterone = $singleton ({\n\n    prototypeTests: [],\n\n    isRunning: $property (function () {\n        return this.currentAssertion !== undefined }),\n\n    /*  Hook up to assertion syntax defined in common.js\n     */\n    constructor: function () {\n\n        _.each (_.assertions, function (fn, name) {\n                                    this.defineAssertion (name, (name === 'assertFails') ?\n                                        $shouldFail (function (what) { what.call (this) }) : fn) }, this);\n\n        /*  For defining tests inside prototype definitions\n         */\n        (function (register) {\n            $prototype.macro ('$test',  register)\n            $prototype.macro ('$tests', register) }) (this.$ (function (def, value, name) {\n                                                        this.prototypeTests.push ({\n                                                            proto: def.constructor,\n                                                            tests: value })\n\n                                                        def.$tests = $static ($property ($constant (\n                                                            (_.isStrictlyObject (value) && value) || _.object ([['test', value]]))))\n\n                                                        return def }))\n        this.run = this.$ (this.run) },\n\n    /*  Entry point\n     */\n    run: _.interlocked (function (cfg_) {\n\n        /*  Configuration\n         */\n        var defaults = {\n            suites: [],\n            silent:  true,\n            verbose: false,\n            timeout: 2000,\n            filter: _.identity,\n            testStarted:  function (test) {},\n            testComplete: function (test) {} }\n\n        var cfg = this.runConfig = _.extend (defaults, cfg_)\n\n        /*  Read cfg.suites\n         */\n        var suitesIsArray = _.isArray (cfg.suites) // accept either [{ name: xxx, tests: yyy }, ...] or { name: tests, ... }\n        var suites = _.map (cfg.suites, this.$ (function (suite, name) {\n            return this.testSuite (suitesIsArray ? suite.name : name, suitesIsArray ? suite.tests : suite, cfg.context, suite.proto) }))\n\n        /*  Pick prototype tests\n         */\n        var result = ((cfg.codebase === false) ? __([]) : this.collectPrototypeTests ()).then (this.$ (function (prototypeTests) {\n\n            /*  Gather tests\n             */\n            var baseTests   = cfg.codebase === false ? [] : this.collectTests ()\n            var allTests    = _.flatten (_.pluck (baseTests.concat (suites).concat (prototypeTests), 'tests'))\n            var selectTests = _.filter (allTests, cfg.shouldRun || _.constant (true))\n\n            /*  Reset context (assigning indices)\n             */\n            this.runningTests = _.map (selectTests, function (test, i) { return _.extend (test, { indent: cfg.indent, index: i }) })\n\n            _.each (this.runningTests, function (t) {\n                if (!(t.routine instanceof Function)) {\n                    log.ee (t.suite, t.name, '– test routine is not a function:', t.routine)\n                    throw new Error () } })\n\n            this.runningTests = _.filter (this.runningTests, cfg.filter || _.identity)\n\n            /*  Go\n             */\n            return __ .each (this.runningTests, this.$ (this.runTest))\n                      .then (this.$ (function () {\n                                _.assert (cfg.done !== true)\n                                          cfg.done   = true\n\n                                this.printLog (cfg)\n                                this.failedTests = _.filter (this.runningTests, _.property ('failed'))\n                                this.failed = (this.failedTests.length > 0)\n                                \n                                return !this.failed })) }))\n\n        return result.catch (function (e) {\n                                log.margin ()\n                                log.ee (log.boldLine, 'TESTOSTERONE CRASHED', log.boldLine, '\\n\\n', e)\n                                throw e }) }),\n\n    onException: function (e) {\n        if (this.currentAssertion) \n            this.currentAssertion.onException (e)\n        else\n            throw e },\n\n    /*  You may define custom assertions through this API\n     */\n    defineAssertions: function (assertions) {\n        _.each (assertions, function (fn, name) {\n            this.defineAssertion (name, fn) }, this) },\n\n    /*  Internal impl\n     */\n    runTest: function (test, i) { var self = this, runConfig = this.runConfig\n\n        log.impl.configStack = [] // reset log config stack, to prevent stack pollution due to exceptions raised within log.withConfig (..)\n    \n        return __.then (runConfig.testStarted (test), function () {\n\n            test.verbose = runConfig.verbose\n            test.timeout = runConfig.timeout\n            test.startTime = Date.now ()\n\n            return test.run ()\n                       .then (function () {\n                                test.time = (Date.now () - test.startTime)\n                                return runConfig.testComplete (test) }) }) },\n\n    collectTests: function () {\n        return _.map (_.tests, this.$ (function (suite, name) {\n            return this.testSuite (name, suite) } )) },\n\n    collectPrototypeTests: function () { var self = this\n        return __.map (this.prototypeTests, function (def, then) {\n                                                return def.proto.$meta.promise.then (function (meta) {\n                                                    return self.testSuite (meta.name, def.tests, undefined, def.proto) }) }) },\n\n    testSuite: function (name, tests, context, proto) { return { \n        name: name || '',\n        tests: _(_.pairs (((typeof tests === 'function') && _.object ([[name, tests]])) || tests))\n                .map (function (keyValue) {\n                        var test = new Test ({ proto: proto, name: keyValue[0], routine: keyValue[1], suite: name, context: context })\n                            test.complete (function () {\n                                if (!(test.hasLog = (test.logCalls.length > 0))) {\n                                         if (test.failed)  { log.red   ('FAIL') }\n                                    else if (test.verbose) { log.green ('PASS') } } })\n\n                            return test }) } },\n\n    defineAssertion: function (name, def) { var self = this\n        _.deleteKeyword (name)\n        _.defineKeyword (name, Tags.modify (def,\n                                    function (fn) {\n                                        return _.withSameArgs (fn, function () { var loc = $callStack.safeLocation (($platform.Browser && !$platform.Chrome) ? 0 : 1)\n                                            if (!self.currentAssertion) {\n                                                return fn.apply (self, arguments) }\n                                            else {\n                                                return self.currentAssertion.babyAssertion (name, def, fn, arguments, loc) } }) })) },\n\n    printLog: function (cfg) { if (!cfg.supressLog) {\n\n        var loggedTests = _.filter (this.runningTests, function (test) { return test.failed || (!cfg.silent && test.hasLog) })\n        var failedTests = _.filter (this.runningTests, _.property ('failed'))\n\n        _.invoke (cfg.verbose ? this.runningTests : loggedTests, 'printLog')\n\n        if (failedTests.length) {\n            log.orange ('\\n' + log.boldLine + '\\n' + 'SOME TESTS FAILED:', _.pluck (failedTests, 'name').join (', '), '\\n\\n') }\n\n        else if (cfg.silent !== true) {\n            log.green ('\\n' + log.boldLine + '\\n' + 'ALL TESTS PASS\\n\\n') } } } })\n\n\n/*  Encapsulates internals of test's I/O.\n */\nTest = $prototype ({\n\n    constructor: function (cfg) {\n        _.defaults (this, cfg, {\n            name:       '<< UNNAMED FOR UNKNOWN REASON >>',\n            failed:     false,\n            routine:    undefined,\n            verbose:    false,\n            depth:      1,\n            indent:     0,\n            failedAssertions: [],\n            context:    this,\n            complete: _.extend (_.barrier (), { context: this }) })\n\n        this.babyAssertion = _.interlocked (this.babyAssertion) },\n\n    finalize: function () {\n        this.babyAssertion.wait (this.$ (function () {\n            if (this.canFail && this.failedAssertions.length) {\n                this.failed = true }\n            this.complete (true) })) },\n\n    babyAssertion: function (name, def, fn, args, loc) { var self = this\n\n        var assertion = new Test ({\n            mother: this,\n            name: name,\n            shouldFail: def.$shouldFail || this.shouldFail,\n            depth: this.depth + 1,\n            location: loc,\n            context: this.context,\n            timeout: this.timeout / 2,\n            verbose: this.verbose,\n            silent:  this.silent,\n            routine: Tags.modify (def, function (fn) {\n                                            return function (done) {\n                                                    if ($async.is (args[0]) || $async.is (def)) {\n                                                        _.cps.apply (fn, self.context, args, function (args, then) {\n                                                                                                         if (then) {\n                                                                                                             then.apply (this, args) }\n                                                                                                         done () }) }\n                                                    else {\n                                                        try       { fn.apply (self.context, args); done (); }\n                                                        catch (e) { assertion.onException (e); } } } }) })\n\n        return assertion.run ()\n                        .finally (function (e, x) {\n                                Testosterone.currentAssertion = self\n                                if (assertion.failed || (assertion.verbose && assertion.logCalls.notEmpty)) {\n                                    return assertion.location\n                                                    .sourceReady\n                                                    .promise\n                                                    .then (function (src) {\n                                                                log.red (log.config ({ location: assertion.location, where: assertion.location }), src)\n                                                                assertion.evalLogCalls ()\n                                                                return src }) } })\n\n                        .then (function (src) {\n                            if (assertion.failed && self.canFail) {\n                                self.failedAssertions.push (assertion) } }) },\n\n    canFail: $property (function () {\n        return !this.failed && !this.shouldFail }),\n\n    fail: function () {\n        this.failed = true\n        this.finalize () },\n\n    assertionStack: $property (function () { var result = [],\n                                                      a = this; do { result.push (a); a = a.mother } while (a)\n                                          return result }),\n\n    onException: function (e) {\n\n            if (this.canFail || this.verbose) {\n\n                if (_.isAssertionError (e)) {\n                    //  • a\n                    //  • b\n                    if ('notMatching' in e) { var notMatching = _.coerceToArray (e.notMatching)\n                        if (e.asColumns) {\n                            log.orange (\n                                log.columns (_.map (notMatching, function (obj) {\n                                    return ['\\t• ' + _.keys (obj)[0], _.stringify (_.values (obj)[0])] })).join ('\\n')) }\n                        else {\n                            var cases  = _.map (notMatching, log.impl.stringify.arity1.then (_.bullet.$ ('\\t• ')))\n                            var common = _.reduce2 (cases, _.longestCommonSubstring) || ''\n                            if (common.length < 4) {\n                                common = undefined }\n\n                            _.each (cases, function (what) {\n\n                                    if (common) {                                  var where  = what.indexOf (common)\n                                        log.write ( log.color.orange,  what.substr (0, where),\n                                                    log.color.dark,    common,\n                                                    log.color.orange,  what.substr (where + common.length)) }\n\n                                    else {\n                                        log.orange (what) } }) }} }\n                        \n                    // print exception\n                else {\n                    if (this.depth > 1) { log.newline () }\n                                          log.write (e) }\n                                          log.newline () }\n\n            if (this.canFail) { this.fail () }\n                        else  { this.finalize () } },\n\n    run: function () { var self    = Testosterone.currentAssertion = this,\n                           routine = Tags.unwrap (this.routine)\n\n        return new Channel (this.$ (function (then) {\n\n            this.shouldFail = $shouldFail.is (this.routine)\n            this.failed = false\n            this.hasLog = false\n            this.logCalls = []\n            this.failureLocations = {}\n\n            _.withTimeout ({\n                maxTime: self.timeout,\n                expired: function () { if (self.canFail) { log.ee ('TIMEOUT EXPIRED'); self.fail () } } },\n                self.complete)\n\n            _.withUncaughtExceptionHandler (self.$ (self.onException), self.complete)\n\n            log.withWriteBackend (_.extendWith ({ indent: 1 },\n                                        function (x) { /*log.impl.defaultWriteBackend (x);*/ self.logCalls.push (x) }),\n\n                                  function (doneWithLogging)  { self.complete (doneWithLogging.arity0)\n                                                    if (then) { self.complete (then) }\n\n                                        /*  Continuation-passing style flow control\n                                         */\n                                        if (routine.length > 0) {\n                                            routine.call (self.context, self.$ (self.finalize)) }\n\n                                        /*  Return-style flow control\n                                         */\n                                        else {\n\n                                        /*  TODO:   investigate why Promise.resolve ().then (self.$ (self.finalize))\n                                                    leads to broken unhandled exception handling after the Testosterone run completes  */\n\n                                            var result = undefined\n\n                                            try       { result = routine.call (self.context) }\n                                            catch (e) { self.onException (e) }\n\n                                            if (_.isArrayLike (result) && (result[0] instanceof Promise)) {\n                                                result = __.all (result) }\n\n                                            if (result instanceof Promise) {\n                                                result.then (\n                                                    function (x) { self.finalize () }.postponed,\n                                                    function (e) { self.onException (e) }) }\n                                            else {\n                                                self.finalize () } } }) })) },\n            \n    printLog: function () { var suiteName = (this.suite && (this.suite !== this.name) && (this.suite || '').quote ('[]')) || ''\n\n        log.write (log.color.blue,\n            '\\n' + log.boldLine,\n            '\\n' + _.nonempty ([suiteName, this.name]).join (' '),\n            (this.index + ' of ' + Testosterone.runningTests.length).quote ('()') +\n            (this.failed ? ' FAILED' : '') + ':',\n            '\\n')\n\n        this.evalLogCalls () },\n\n    evalLogCalls: function () {\n        _.each (this.logCalls, log.writeBackend ().arity1) } })\n\n\n/*\n */\n_.defineTagKeyword ('allowsRecursion')\n\n_.limitRecursion = function (max, fn, name) { if (!fn) { fn = max; max = 0 }\n                        var depth       = -1\n                        var reported    = false\n                            return function () {\n                                if (!reported) {\n                                    if (depth > max) { reported = true\n                                        throw _.extendWith ({ notMatching: _.map (arguments, function (arg, i) { return 'arg' + (i + 1) + ': ' + _.stringify (arg) }) },\n                                            new Error (name + ': max recursion depth reached (' + max + ')')) }\n                                    else {\n                                        var result = ((++depth), fn.apply (this, arguments)); depth--\n                                            return result } } } }\n                                            \nTestosterone.ValidatesRecursion = $trait ({\n\n    $test: function () {\n\n        var test = new ($component ({\n\n            $traits: [Testosterone.ValidatesRecursion],\n\n            foo: function () {},\n            bar: function () { this.bar () },\n            baz: $allowsRecursion ({ max: 2 }, function () { this.baz () }),\n            qux: $allowsRecursion (function () { if (!this.quxCalled) { this.quxCalled = true; this.qux () } }) }))\n\n                       test.foo ()\n        $assertThrows (test.bar, { message: 'bar: max recursion depth reached (0)' })\n                       test.bar () // should not report second time (to prevent overflood in case of buggy code)\n        $assertThrows (test.baz, { message: 'baz: max recursion depth reached (2)' })\n                       test.qux () },\n\n    $constructor: function () {\n        _.each (this, function (member, name) {\n            if (_.isFunction ($untag (member)) && (name !== 'constructor') && (!member.$allowsRecursion || (member.$allowsRecursion.max !== undefined))) {\n                this[name] = Tags.modify (member, function (fn) {\n                    return _.limitRecursion ((member && member.$allowsRecursion && member.$allowsRecursion.max) || 0, fn, name) }) } }, this) } })\n\n/*  $log for methods\n */\n;(function () { var colors = _.keys (_.omit (log.color, 'none'))\n                    colors.each (_.defineTagKeyword)\n\n    _.defineTagKeyword ('verbose')\n\n    Testosterone.LogsMethodCalls = $trait ({\n\n        $test: $platform.Browser ? (function () {}) : function (testDone) {\n\n                    var Proto = $prototype ({ $traits: [Testosterone.LogsMethodCalls] })\n                    var Compo = $extends (Proto, {\n                                        foo: $log ($pink ($verbose (function (_42) { $assert (_42, 42); return 24 }))) })\n\n                    var compo = new Compo ()\n                    var testContext = this\n\n                    Compo.$meta (function () {\n                        $assert (compo.foo (42), 24)\n                        $assert (_.pluck (testContext.logCalls, 'text'), ['Compo.foo (42)', '→ 24', ''])\n                        $assert (testContext.logCalls[0].color === log.color ('pink'))\n                        testDone () }) },\n\n        $macroTags: {\n\n            log: function (def, member, name) { var param         = (_.isBoolean (member.$log) ? undefined : member.$log) || (member.$verbose ? '{{$proto}}' : '')\n                                                var meta          = {}\n                                                var color         = _.find2 (colors, function (color) { return log.color ((member['$' + color] && color)) || false })\n                                                var template      = param && _.template (param, { interpolate: /\\{\\{(.+?)\\}\\}/g })\n\n                $untag (def.$meta) (function (x) { meta = x }) // fetch prototype name\n\n                return $prototype.impl.modifyMember (member, function (fn, name_) { return function () { var this_      = this,\n                                                                                                             arguments_ = _.asArray (arguments)\n\n                        var this_dump = (template && template.call (this, _.extend ({ $proto: meta.name }, _.map2 (this, _.stringifyOneLine.arity1)))) || this.desc || ''\n                        var args_dump = _.map (arguments_, _.stringifyOneLine.arity1).join (', ').quote ('()')\n\n                    log.write (log.config ({\n                        color: color,\n                        location: true,\n                        where: member.$verbose ? undefined : { calleeShort: meta.name } }), _.nonempty ([this_dump, name, name_]).join ('.'), args_dump)\n\n                    return log.withConfig ({ indent: 1,\n                                             color: color,\n                                             protoName: meta.name }, function () {\n\n                                                                        var numWritesBefore = log.impl.numWrites\n                                                                        var result          = fn.apply (this_, arguments_);          \n\n                                                                        if (result !== undefined) {\n                                                                            log.write ('→', _.stringifyOneLine (result)) }\n\n                                                                        if ((log.currentConfig ().indent < 2) &&\n                                                                            (log.impl.numWrites - numWritesBefore) > 0) { log.newline () }\n\n                                                                        return result }) } }) } } }) }) ();\n\n\nif ($platform.NodeJS) {\n    module.exports = Testosterone }\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/Testosterone.js\n ** module id = 7\n ** module chunks = 0\n **/","/*  Measures run time of a routine (either sync or async)\n    ======================================================================== */\n\n_.measure = function (routine, then) {\n    if (then) {                             // async\n        var now = _.now ()\n        routine (function () {\n            then (_.now () - now) }) }\n    else {                                  // sync\n        var now = _.now ()\n        routine ()\n        return _.now () - now } }\n\n\n/*  Measures performance: perfTest (fn || { fn1: .., fn2: ... }, then)\n    ======================================================================== */\n\n_.perfTest = function (arg, then) {\n    var rounds = 500\n    var routines = _.isFunction (arg) ? { test: arg } : arg\n    var timings = {}\n\n    _.cps.each (routines, function (fn, name, then) {\n\n        /*  Define test routine (we store and print result, to assure our routine\n            won't be throwed away by optimizing JIT)\n         */\n        var result = []\n        var run = function () {\n            for (var i = 0; i < rounds; i++) {\n                result.push (fn ()) }\n            console.log (name, result) }\n\n        /*  Warm-up run, to force JIT work its magic (not sure if 500 rounds is enough)\n         */\n        run ()\n\n        /*  Measure (after some delay)\n         */\n        _.delay (function () {\n            timings[name] = _.measure (run) / rounds\n            then () }, 100) },\n\n        /*  all done\n         */\n        function () {\n            then (timings) }) }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/profiling.js\n ** module id = 8\n ** module chunks = 0\n **/","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n------------------------------------------------------------------------\n\nError reporting UI\n\n------------------------------------------------------------------------\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n/*  ======================================================================== */\n\n(function ($ /* JQUERY */) {\n\nif (typeof UI === 'undefined') {\n\tUI = {} }\n\nPanic = function (what, cfg) { cfg = _.defaults (_.clone (cfg || {}), { dismiss: _.identity, raw: false })\n\n\tif (_.isTypeOf (Error, what)) {\n\t\t_.extend (cfg, _.pick (what, 'retry', 'dismiss')) }\n\n\tPanic.widget.append (what, cfg.raw)\n\n\tif (_.isFunction (cfg.retry)) {\n\t\tPanic.widget.onRetry (cfg.retry) }\n\n\tif (_.isFunction (cfg.dismiss)) {\n\t\tPanic.widget.onClose (cfg.dismiss) } }\n\nPanic.init = function () {\n\tif (!Panic._initialized) {\n\t\t Panic._initialized = true\n\t   _.withUncaughtExceptionHandler (function (e) { Panic (e); throw e /* re-throw, to make it visible in WebInspector */ }) } }\n\nPanic.widget = $singleton (Component, {\n\n\tretryTriggered: $triggerOnce (),\n\tcloseTriggered: $triggerOnce (),\n\n\tel: $memoized ($property (function () {\n\n\t\tvar el = $('<div class=\"panic-modal-overlay\" style=\"z-index:5000; display:none;\">').append ([\n\t\t\tthis.bg    = $('<div class=\"panic-modal-overlay-background\">'),\n\t\t\tthis.modal = $('<div class=\"panic-modal\">').append ([\n\t\t\t\tthis.modalBody = $('<div class=\"panic-modal-body\">').append (\n\t\t\t\t\tthis.title = $('<div class=\"panic-modal-title\">Now panic!</div>')),\n\t\t\t\t$('<div class=\"panic-modal-footer\">').append ([\n\t\t\t\t\tthis.btnRetry = $('<button type=\"button\" class=\"panic-btn panic-btn-warning\" style=\"display:none;\">Try again</button>')\n\t\t\t\t\t\t.touchClick (this.retry),\n\t\t\t\t\tthis.btnClose = $('<button type=\"button\" class=\"panic-btn panic-btn-danger\" style=\"display:none;\">Close</button>')\n\t\t\t\t\t\t.touchClick (this.close) ]) ]) ])\n\n\t\tel.appendTo (document.body)\n\t\t\n\t\t$(document).ready (function () {\n\t\t\tel.appendTo (document.body) })\n\n\t\ttry {\n\t\t\t$(window).resize (this.layout).resize ()\n\t\t\tthis.modal.enableScrollFaders ({ scroller: this.modalBody })\n\t\t\t$(document).keydown (this.$ (function (e) { if (e.keyCode === 27) { this.close () } })) }\n\n\t\tcatch (e) {\n\t\t\t_.delay (function () { Panic (e) }) }\n\n\t\treturn el })),\n\n\tlayout: function () { var maxContentWidth = _.coerceToUndefined (_.max (_.map (this.modal.find ('pre'), _.property ('scrollWidth'))))\n\n\t\tthis.modal.css ({ 'max-height': $(window).height () - 100,\n\t\t\t\t\t\t  'width': maxContentWidth && (maxContentWidth + 120) })\n\n\t\tthis.modalBody.scroll () },\n\n\ttoggleVisibility: function (yes) {\n\t\tif (yes !== !(this.el.css ('display') === 'none')) {\n\t        if (yes) {\n\t            this.el.css ('display', '') }\n\t        this.el.animateWith (yes ? 'panic-modal-appear' : 'panic-modal-disappear', this.$ (function () {\n\t            if (!yes) {\n\t                this.el.css ('display', 'none') } })) } },\n\n\tonRetry: function (retry) {\n\t\tthis.retryTriggered (retry)\n\t\tthis.btnRetry.css ('display', '') },\n\n\tonClose: function (close) {\n\t\tthis.closeTriggered (close)\n\t\tthis.btnClose.css ('display', '') },\n\n\tretry: function () {\n\t\tthis._clean ()\n\t\tthis.closeTriggered.off ()\n\t\tthis.toggleVisibility (false)\n\t\tthis.retryTriggered () },\n\n\tclose: function () {\n\t\tthis._clean ()\n\t\tthis.retryTriggered.off ()\n\t\tthis.toggleVisibility (false)\n\t\tthis.closeTriggered () },\n\n   _clean: function () {\n\t\tthis.modalBody.find ('.panic-alert-error').remove ()\n\t\tthis.modalBody.scroll ()\n\t\tthis.btnRetry.css ('display', 'none')\n\t\tthis.btnClose.css ('display', 'none') },\n\n\tappend: function (what, raw) { var id = 'panic' + this.hash (what)\n\n\t\tvar counter = $('#' + id + ' .panic-alert-counter')\n\t\tif (counter.length) {\n\t\t\tcounter.text ((counter.text () || '1').parsedInt + 1) }\n\t\telse {\n\t\t\t$('<div class=\"panic-alert-error\">').attr ('id', id)\n\t\t\t\t\t\t\t\t\t\t\t\t.append ('<span class=\"panic-alert-counter\">')\n\t\t\t\t\t\t\t\t\t\t\t\t.append (this.print (what, raw))\n\t\t\t\t\t\t\t\t\t\t\t\t.insertAfter (this.el.find ('.panic-modal-title')) }\n\t\tthis.toggleVisibility (true)\n\t\tthis.layout ()  },\n\n\thash: function (what) {\n\t\treturn ((_.isTypeOf (Error, what) ? (what && what.stack) :\n\t\t\t\t(_.isTypeOf (Test, what)  ? (what.suite + what.name) :\n                _.stringify (what))) || '').hash },\n\n\tprint: function (what, raw) {\n\t\treturn (_.isTypeOf (Error, what) ?\n\t\t\t\t\t\tthis.printError (what) :\n\t\t\t   (_.isTypeOf (Test, what) ?\n\t\t\t\t\t\tthis.printFailedTest (what) :\n\t\t\t\t\t\tthis.printUnknownStuff (what, raw))) },\n\n\tprintUnknownStuff: function (what, raw) {\n\t\treturn raw ? what : $('<span>').text (log.impl.stringify (what)) },\n\n\tprintLocation: function (where) {\n\t\treturn $('<span class=\"location\">')\n\t\t\t\t\t.append ([$('<span class=\"callee\">').text (where.calleeShort),\n\t\t\t\t\t\t\t  $('<span class=\"file\">')  .text (where.fileName), \n\t\t\t\t\t\t\t  $('<span class=\"line\">')  .text (where.line)]) },\n\n\tprintFailedTest: function (test) { var logEl = $('<pre class=\"test-log\" style=\"margin-top: 13px;\">')\n\n\t\tlog.withWriteBackend (\n\t\t\tthis.$ (function (params) { if (_.isTypeOf (Error, params.args.first)) { console.log (params.args.first) }\n\n\t\t\t\tlogEl.append (_.isTypeOf (Error, params.args.first)\n\t\t\t\t\t\t? ($('<div class=\"inline-exception-entry\">')\n\t\t\t\t\t\t\t\t.append ([_.escape (params.indentation),\n\t\t\t\t\t\t\t\t\t\t\t$('<div class=\"panic-alert-error inline-exception\">').append (\n\t\t\t\t\t\t\t\t\t\t\t\tthis.printError (params.args.first))]))\n\t\t\t\t\t\t: $('<div class=\"log-entry\">')\n\t\t\t\t\t\t\t\t.append (\n\t\t\t\t\t\t\t\t\t_.map (params.lines, function (line, i, lines) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $('<div class=\"line\">')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.append (_.escape (params.indentation))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.append (_.map (line, function (run) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $('<span>')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.attr ('style', (run.config.color && run.config.color.css) || '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.text (run.text) }))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.append ((i === lines.lastIndex) ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[params.where && this.printLocation (params.where),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t params.trailNewlines.replace (/\\n/g, '<br>')] : []) }, this))) }),\n\n\t\t\tfunction (done) {\n\t\t\t\ttest.evalLogCalls ()\n\t\t\t\tdone () })\n\n\t\treturn [$('<div class=\"panic-alert-error-message\" style=\"font-weight: bold;\">')\n\t\t\t\t    .text (test.name)\n\t\t\t\t    .append ('<span style=\"float:right; opacity: 0.25;\">test failed</span>'), logEl] },\n\n\tprintError: function (e) { var stackEntries = CallStack.fromErrorWithAsync (e)\n\t\treturn [\n\n\t\t\t$('<div class=\"panic-alert-error-message\" style=\"font-weight: bold;\">')\n\t\t\t\t.text (e.message)\n\t\t\t\t.append (_.any (stackEntries, function (e, i) { return (e.thirdParty || e['native'] || e.hide) && (i !== 0) })\n\t\t\t\t\t\t\t? '<a class=\"clean-toggle\" href=\"javascript:{}\"></a>'\n\t\t\t\t\t\t\t: '')\n\t\t\t\t.click (this.$ (function (e) {\n\t\t\t\t\t$(e.delegateTarget).parent ()\n\t\t\t\t\t\t.toggleClass ('all-stack-entries')\n\t\t\t\t\t\t.transitionend (this.$ (function () {\n\t\t\t\t\t\t\tthis.modalBody.scroll () })) })),\n\n\t\t\t$('<div class=\"not-matching\" style=\"margin-top: 5px; padding-left: 10px;\">').append (_.map (_.coerceToArray (e.notMatching || []), function (s) {\n\t\t\t\treturn $('<pre>').text (log.impl.stringify (s)) })),\n\n\t\t\t$('<ul class=\"callstack\">').append (_.map (stackEntries, this.$ (function (entry) {\n\n\t\t\t\tvar dom = $('<li class=\"callstack-entry\">')\n\t\t\t\t\t\t.toggleClass ('third-party', entry.thirdParty || false)\n                        .toggleClass ('hide',        entry.hide || false)\n\t\t\t\t\t\t.toggleClass ('native',      entry['native'] || false)\n\t\t\t\t\t\t.append ([\n\t\t\t\t\t\t\t$('<span class=\"file\">').text (_.nonempty ([entry.index ? '(index)' : entry.fileShort,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry.line]).join (':')),\n\t\t\t\t\t\t\t$('<span class=\"callee\">').text (entry.calleeShort),\n\t\t\t\t\t\t\t$('<span class=\"src i-am-busy\">').click (this.$ (function (e) { var el = $(e.delegateTarget)\n\t\t\t\t\t\t\t\tel.waitUntil (SourceFiles.read.partial ((entry.remote ? 'api/source/' : '') + entry.file), this.$ (function (text) {\n\t\t\t\t\t\t\t\t\tif (dom.is ('.full')) {\n\t\t\t\t\t\t\t\t\t\tdom.removeClass ('full')\n\t\t\t\t\t\t\t\t\t\tdom.transitionend (function () {\n\t\t\t\t\t\t\t\t\t\t\tif (!dom.is ('.full')) {\n\t\t\t\t\t\t\t\t\t\t\t\tentry.sourceReady (el.$ ($.fn.text)) } }) }\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tdom.addClass ('full'); el.html (_.map (text.split ('\\n'), function (line) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $('<div class=\"line\">').text (line) }))\n\n\t\t\t\t\t\t\t\t\t\tvar line = el.find ('.line').eq (entry.line - 1).addClass ('hili')\n\t\t\t\t\t\t\t\t\t\tif (line.length) {\n\t\t\t\t\t\t\t\t\t\t\tvar offset = line.offset ().top - el.offset ().top\n\t\t\t\t\t\t\t\t\t\t\tel.scrollTop (offset - 100) }\n\n\t\t\t\t\t\t\t\t\t\t_.delay (this.$ (function () {\n\t\t\t\t\t\t\t\t\t\t\tvar shouldScrollDownMore = ((el.outerBBox ().bottom + 242) - this.modalBody.outerBBox ().bottom)\n\t\t\t\t\t\t\t\t\t\t\tif (shouldScrollDownMore > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.modalBody.animate ({\n\t\t\t\t\t\t\t\t\t\t\t\t\tscrollTop: this.modalBody.scrollTop () + shouldScrollDownMore }, 250) }})) } })) })) ])\n\n\t\t\t\tentry.sourceReady (function (text) {\n\t\t\t\t\tdom.find ('.src').removeClass ('i-am-busy').text (text) })\n\n\t\t\t\treturn dom }))) ] } })\n\n$.fn.extend ({\n\tenableScrollFaders: function (cfg) {\n\t\tvar horizontal = cfg && cfg.horizontal\n\t\tvar faderTop, faderBottom, scroller = this.find ((cfg && cfg.scroller) || '.scroller')\n\n\t\tthis.css ({ position: 'relative' })\n\t\tthis.append (faderTop = $('<div class=\"scroll-fader scroll-fader-' + (horizontal ? 'left' : 'top') + '\"></div>'))\n\t\t\t.append (faderBottom = $('<div class=\"scroll-fader scroll-fader-' + (horizontal ? 'right' : 'bottom') + '\"></div>'))\n\t\t\n\t\tscroller.scroll (function () {\n\t\t\t\tvar scrollTop = horizontal ? $(this).scrollLeft () : $(this).scrollTop (),\n\t\t\t\t\theight = horizontal ? $(this).width () : $(this).height (),\n\t\t\t\t\tmax = (horizontal ? this.scrollWidth : this.scrollHeight) - 1\n\t\t\t\tfaderTop.css ({ opacity: scrollTop > 0 ? 1 : 0 })\n\t\t\t\tfaderBottom.css ({ opacity: (scrollTop + height) < max ? 1 : 0 }) }).scroll ()\n\n\t\treturn this } })\n\n// -- end of namespace\n\n}) (jQuery);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/Panic.js\n ** module id = 9\n ** module chunks = 0\n **/","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n------------------------------------------------------------------------\n\nModal overlay that renders log.js output for debugging purposes\n\n------------------------------------------------------------------------\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n(function ($ /* JQUERY */) {\n\n\tLogOverlay = $singleton (Component, {\n\n\t\t$defaults: {\n\t\t\topaque: false,     // disables passing of printed log messages to default write backend (console.log) \n\t\t\t/*init: false*/ }, // deferred init\n\n\t\tinit: function () {\n\t\t\t\tlog.withWriteBackend (this.write, function () {})\n\n\t\t\t\t$(document).keydown (this.$ (function (e) {\n\t\t\t\t\tif (e.keyCode === 192) { // ~\n\t\t\t\t\t\tthis.toggle () }\n\t\t\t\t\telse if (e.keyCode === 27) { // Esc\n\t\t\t\t\t\tthis.body.empty () } })) },\n\n\t\tel: $memoized ($property (function () {\n\t\t\t\t\t\t\t\t\treturn $('<div class=\"useless-log-overlay\" style=\"display: none;\">')\n\t\t\t\t\t\t\t\t\t\t\t\t.append ('<div class=\"useless-log-overlay-body\">')\n\t\t\t\t\t\t\t\t\t\t\t\t.appendTo (document.body) })),\n\n\t\tbody: $memoized ($property (function () {\n\t\t\t\t\t\t\t\t\t\treturn this.el.find ('.useless-log-overlay-body') })),\n\n\t\ttoggle: function (yes) {\n\t\t\t\t\tthis.el.toggle (yes) },\n\n\t\tvisible: $property (function () {\n\t\t\t\t\t\t\t\treturn this.el.is (':visible') }),\n\n\t\tclip: function () {\n\t\t            var elHeight   = this.el.height ()\n\t\t            var bodyHeight = this.body.height ()\n\n\t\t            this.body.children ().filter (this.$ (function (i, line) {\n\n\t\t            \tvar lineTop \t= bodyHeight - $(line).offsetInParent ().y\n\t\t            \tvar lineBottom  = lineTop    - $(line).height ()\n\t\t            \tvar clipHeight  = elHeight / 2\n\n\t\t            \treturn (lineTop    > clipHeight) &&\n\t\t            \t\t   (lineBottom > clipHeight) })).remove () },\n\n\t\twrite: function (params) { \tthis.toggle (true)\n\n\t\t\t\t\t\t\t\t\tif (params.config.clear) {\n\t\t\t\t\t\t\t\t\t\tthis.body.empty () }\n\n\t\t\t\t\t\t            this.body.append ($('<div class=\"ulo-line\">')\n\t\t\t\t\t\t\t\t\t\t            \t.attr ('style', (params.color && params.color.css) || '')\n\t\t\t\t\t\t\t\t\t\t            \t.append ($('<span class=\"ulo-line-text\">') .text (params.indentedText  + ' '))\n\t\t\t\t\t\t\t\t\t\t            \t.append ($('<span class=\"ulo-line-where\">').text (params.codeLocation  + ' '))\n\t\t\t\t\t\t\t\t\t\t            \t.append ($('<span class=\"ulo-line-trail\">').text (params.trailNewlines)))\n\n\t\t\t\t\t\t            this.clip.postpone ()\n\n\t\t\t\t\t\t            if (!this.opaque) {\n\t\t\t\t\t\t\t\t\t\tlog.impl.defaultWriteBackend (params) } } })\n\n// -- end of namespace\n\n}) (jQuery);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/LogOverlay.js\n ** module id = 10\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./Panic.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./Panic.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./Panic.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/Panic.css\n ** module id = 11\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"@-webkit-keyframes bombo-jumbo {\\n  0%   { -webkit-transform: scale(0); }\\n  80%  { -webkit-transform: scale(1.2); }\\n  100% { -webkit-transform: scale(1); } }\\n\\n@keyframes bombo-jumbo {\\n  0%   { transform: scale(0); }\\n  80%  { transform: scale(1.2); }\\n  100% { transform: scale(1); } }\\n\\n@-webkit-keyframes pulse-opacity {\\n  0% { opacity: 0.5; }\\n  50% { opacity: 0.25; }\\n  100% { opacity: 0.5; } }\\n\\n@keyframes pulse-opacity {\\n  0% { opacity: 0.5; }\\n  50% { opacity: 0.25; }\\n  100% { opacity: 0.5; } }\\n\\n.i-am-busy { -webkit-animation: pulse-opacity 1s ease-in infinite; animation: pulse-opacity 1s ease-in infinite; pointer-events: none; }\\n\\n.panic-modal .scroll-fader-top, .scroll-fader-bottom { left: 42px; right: 42px; position: absolute; height: 20px; pointer-events: none; }\\n.panic-modal .scroll-fader-top { top: 36px; background: -webkit-linear-gradient(bottom, rgba(255,255,255,0), rgba(255,255,255,1)); }\\n.panic-modal .scroll-fader-bottom { bottom: 128px; background: -webkit-linear-gradient(top, rgba(255,255,255,0), rgba(255,255,255,1)); }\\n\\n.panic-modal-appear {\\n  -webkit-animation: bombo-jumbo 0.25s cubic-bezier(1,.03,.48,1);\\n  animation: bombo-jumbo 0.25s cubic-bezier(1,.03,.48,1); }\\n\\n.panic-modal-disappear {\\n  -webkit-animation: bombo-jumbo 0.25s cubic-bezier(1,.03,.48,1); -webkit-animation-direction: reverse;\\n  animation: bombo-jumbo 0.25s cubic-bezier(1,.03,.48,1); animation-direction: reverse; }\\n\\n.panic-modal-overlay {\\n          display: -ms-flexbox; display: -moz-flex; display: -webkit-flex; display: flex;\\n          -ms-flex-direction: column; -moz-flex-direction: column; -webkit-flex-direction: column; flex-direction: column;\\n          -ms-align-items: center; -moz-align-items: center; -webkit-align-items: center; align-items: center;\\n          -ms-flex-pack: center; -ms-align-content: center; -moz-align-content: center; -webkit-align-content: center; align-content: center;\\n          -ms-justify-content: center; -moz-justify-content: center; -webkit-justify-content: center; justify-content: center;\\n          position: fixed; left: 0; right: 0; top: 0; bottom: 0; }\\n\\n.panic-modal-overlay-background { z-index: 1; position: absolute; left: 0; right: 0; top: 0; bottom: 0; background: white; opacity: 0.75; }\\n\\n.panic-modal * { letter-spacing: 0; font-family: Helvetica, sans-serif; }\\n.panic-modal { font-family: Helvetica, sans-serif; min-width: 640px; max-width: 90%; transition: 0.25s width ease-in-out; box-sizing: border-box; display: -webkit-flex; display: flex; position: relative; border-radius: 4px; z-index: 2; width: 640px; background: white; padding: 36px 42px 128px 42px; box-shadow: 0px 30px 80px rgba(0,0,0,0.25), 0 1px 2px rgba(0,0,0,0.15); }\\n.panic-alert-counter { float: left; background: #904C34; border-radius: 8px; width: 17px; height: 17px; display: inline-block; text-align: center; line-height: 16px; margin-right: 1em; margin-left: -2px; font-size: 10px; color: white; font-weight: bold; }\\n.panic-alert-counter:empty { display: none; }\\n\\n.panic-modal-title { font-family: Helvetica, sans-serif; color: black; font-weight: 300; font-size: 30px; opacity: 0.5; margin-bottom: 1em; }\\n.panic-modal-body { overflow-y: auto; width: 100%; }\\n.panic-modal-footer { text-align: right; position: absolute; left: 0; right: 0; bottom: 0; padding: 42px; }\\n\\n.panic-btn { margin-left: 1em; font-weight: 300; font-family: Helvetica, sans-serif; -webkit-user-select: none; user-select: none; cursor: pointer; display: inline-block; padding: 1em 1.5em; border-radius: 4px; font-size: 14px; border: 1px solid black; color: white; }\\n.panic-btn:focus { outline: none; }\\n.panic-btn:focus { box-shadow: inset 0px 2px 10px rgba(0,0,0,0.25); }\\n\\n.panic-btn-danger       { background-color: #d9534f; border-color: #d43f3a; }\\n.panic-btn-danger:hover { background-color: #c9302c; border-color: #ac2925; }\\n\\n.panic-btn-warning       { background-color: #f0ad4e; border-color: #eea236; }\\n.panic-btn-warning:hover { background-color: #ec971f; border-color: #d58512; }\\n\\n.panic-alert-error { border-radius: 4px; background: #FFE8E2; color: #904C34; padding: 1em 1.2em 1.2em 1.2em; margin-bottom: 1em; font-size: 14px; }\\n\\n.panic-alert-error { position: relative; text-shadow: 0px 1px 0px rgba(255,255,255,0.25); }\\n\\n.panic-alert-error .clean-toggle { height: 2em; text-decoration: none; font-weight: 300; position: absolute; color: black; opacity: 0.25; right: 0; top: 0; display: block; text-align: right; }\\n.panic-alert-error .clean-toggle:hover { text-decoration: underline; }\\n.panic-alert-error .clean-toggle:before,\\n.panic-alert-error .clean-toggle:after { position: absolute; right: 0; transition: all 0.25s ease-in-out; display: inline-block; overflow: hidden; }\\n.panic-alert-error .clean-toggle:before { -webkit-transform-origin: center left; transform-origin: center left; content: 'more'; }\\n.panic-alert-error .clean-toggle:after { -webkit-transform-origin: center left; transform-origin: center right; content: 'less'; }\\n.panic-alert-error.all-stack-entries .clean-toggle:before { -webkit-transform: scale(0); transform: scale(0); }\\n.panic-alert-error:not(.all-stack-entries) .clean-toggle:after { -webkit-transform: scale(0); transform: scale(0); }\\n\\n.panic-alert-error:last-child { margin-bottom: 0; }\\n\\n.panic-alert-error-message { line-height: 1.2em; position: relative; }\\n\\n.panic-alert-error .callstack { font-size: 12px; margin: 2em 0 0.1em 0; padding: 0; }\\n.panic-alert-error .callstack * { font-family: Menlo, monospace; }\\n\\n.panic-alert-error .callstack-entry { white-space: nowrap; opacity: 1; transition: all 0.25s ease-in-out; margin-top: 10px; list-style-type: none; max-height: 38px; overflow: hidden; }\\n.panic-alert-error .callstack-entry .file { }\\n.panic-alert-error .callstack-entry .file:not(:empty) + .callee:not(:empty):before { content: ' \\\\2192   '; }\\n\\n.panic-alert-error:not(.all-stack-entries) > .callstack > .callstack-entry.third-party:not(:first-child),\\n.panic-alert-error:not(.all-stack-entries) > .callstack > .callstack-entry.hide:not(:first-child),\\n.panic-alert-error:not(.all-stack-entries) > .callstack > .callstack-entry.native:not(:first-child) { max-height: 0; margin-top: 0; opacity: 0; }\\n\\n.panic-alert-error .callstack-entry,\\n.panic-alert-error .callstack-entry * { line-height: initial; }\\n.panic-alert-error .callstack-entry .src { overflow: hidden; transition: height 0.25s ease-in-out; height: 22px; border-radius: 2px; cursor: pointer; margin-top: 2px; white-space: pre; display: block; color: black; background: rgba(255,255,255,0.75); padding: 4px; }\\n.panic-alert-error .callstack-entry.full .src { font-size: 12px; height: 200px; overflow: scroll; }\\n.panic-alert-error .callstack-entry.full .src .line.hili { background: yellow; }\\n.panic-alert-error .callstack-entry.full { max-height: 220px; }\\n\\n.panic-alert-error .callstack-entry .src.i-am-busy { background: white; }\\n\\n.panic-alert-error .callstack-entry        .src:empty                  { pointer-events: none; }\\n.panic-alert-error .callstack-entry        .src:empty:before           { content: '<< SOURCE NOT LOADED >>'; color: rgba(0,0,0,0.25); }\\n.panic-alert-error .callstack-entry.native .src:empty:before           { content: '<< NATIVE CODE >>'; color: rgba(0,0,0,0.25); }\\n.panic-alert-error .callstack-entry        .src.i-am-busy:empty:before { content: '<< SOURCE LOADING >>'; color: rgba(0,0,0,0.5); }\\n\\n.panic-alert-error .test-log .location { transition: opacity 0.25s ease-in-out; color: black; opacity: 0.25; display: inline-block; overflow: hidden; text-overflow: ellipsis; vertical-align: middle; }\\n.panic-alert-error .test-log .location:hover { opacity: 1; }\\n\\n.panic-alert-error .test-log .location:before { content: ' @ '; }\\n\\n.panic-alert-error .test-log .location .callee:after  { content: ', '; }\\n.panic-alert-error .test-log .location .file          { opacity: 0.5; }\\n.panic-alert-error .test-log .location .line:before   { content: ':'; }\\n.panic-alert-error .test-log .location .line          { opacity: 0.25; }\\n\\n/*  Hack to prevent inline-blocked divs from wrapping within white-space: pre;\\n */\\n.panic-alert-error .test-log .inline-exception-entry:after { content: ' '; }\\n.panic-alert-error .test-log .log-entry        .line:after { content: ' '; }\\n.panic-alert-error           .callstack-entry  .line:after { content: ' '; }\\n\\n.panic-alert-error pre { overflow: scroll; border-radius: 2px; color: black; background: rgba(255,255,255,0.75); padding: 4px; margin: 0; }\\n.panic-alert-error pre,\\n.panic-alert-error pre * { font-family: Menlo, monospace; font-size: 11px; white-space: pre !important; }\\n\\n.panic-alert-error.inline-exception { max-width: 640px; border-radius: 0; margin: 0; background: none; display: inline-block; transform-origin: 0 0; transform: scale(0.95); }\\n.panic-alert-error.inline-exception .panic-alert-error-message { cursor: pointer; }\\n.panic-alert-error.inline-exception:not(:first-child) { margin-top: 10px; border-top: 1px solid #904C34; }\\n\\n\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./client/Panic.css\n ** module id = 12\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 13\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 14\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./LogOverlay.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./LogOverlay.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./LogOverlay.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/LogOverlay.css\n ** module id = 15\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".useless-log-overlay {\\tposition: fixed; bottom: 10px; left: 10px; right: 10px; top: 10px; z-index: 5000;\\n\\t\\t\\t\\t\\t\\toverflow: hidden;\\n\\t\\t\\t\\t\\t\\tpointer-events: none;\\n\\t\\t\\t\\t\\t\\t-webkit-mask-image: -webkit-gradient(linear, left top, left bottom,\\n\\t\\t\\t\\t\\t\\t\\tcolor-stop(0.00, rgba(0,0,0,0)),\\n\\t\\t\\t\\t\\t\\t\\tcolor-stop(0.50, rgba(0,0,0,0)),\\n\\t\\t\\t\\t\\t\\t\\tcolor-stop(0.60, rgba(0,0,0,0.8)),\\n\\t\\t\\t\\t\\t\\t\\tcolor-stop(1.00, rgba(0,0,0,1))); }\\n\\n.useless-log-overlay-body {\\n\\n\\tfont-family: Menlo, monospace;\\n\\tfont-size: 11px;\\n\\twhite-space: pre;\\n\\tbackground: rgba(255,255,255,1);\\n\\ttext-shadow: 1px 1px 0px rgba(0,0,0,0.07); position: absolute; bottom: 0; left: 0; right: 0; }\\n\\n.ulo-line \\t\\t{ white-space: pre; word-wrap: normal; }\\n.ulo-line-where { color: black; opacity: 0.25; }\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./client/LogOverlay.css\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}